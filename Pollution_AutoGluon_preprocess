{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1ppviZvc3QDt8GAShNzFK7hbjv5P_Skoy","timestamp":1686304197021}],"mount_file_id":"1Ic6nT7Dv6RMZ-2UPojY_PQL6CebYwfZu","authorship_tag":"ABX9TyOr6QgxWAUTY0/P+Pfpd9J2"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["!pip install --upgrade mxnet\n","!pip install autogluon"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V8GliVlEUn8J","executionInfo":{"status":"ok","timestamp":1689898615534,"user_tz":-120,"elapsed":25576,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"df0e41e9-79f0-41b2-bbba-2fe3ea7fd749"},"execution_count":205,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: mxnet in /usr/local/lib/python3.10/dist-packages (1.9.1)\n","Requirement already satisfied: numpy<2.0.0,>1.16.0 in /usr/local/lib/python3.10/dist-packages (from mxnet) (1.22.4)\n","Requirement already satisfied: requests<3,>=2.20.0 in /usr/local/lib/python3.10/dist-packages (from mxnet) (2.27.1)\n","Requirement already satisfied: graphviz<0.9.0,>=0.8.1 in /usr/local/lib/python3.10/dist-packages (from mxnet) (0.8.4)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.20.0->mxnet) (1.26.16)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.20.0->mxnet) (2023.5.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.20.0->mxnet) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.20.0->mxnet) (3.4)\n","Requirement already satisfied: autogluon in /usr/local/lib/python3.10/dist-packages (0.8.2)\n","Requirement already satisfied: autogluon.core[all]==0.8.2 in /usr/local/lib/python3.10/dist-packages (from autogluon) (0.8.2)\n","Requirement already satisfied: autogluon.features==0.8.2 in /usr/local/lib/python3.10/dist-packages (from autogluon) (0.8.2)\n","Requirement already satisfied: autogluon.tabular[all]==0.8.2 in /usr/local/lib/python3.10/dist-packages (from autogluon) (0.8.2)\n","Requirement already satisfied: autogluon.multimodal==0.8.2 in /usr/local/lib/python3.10/dist-packages (from autogluon) (0.8.2)\n","Requirement already satisfied: autogluon.timeseries[all]==0.8.2 in /usr/local/lib/python3.10/dist-packages (from autogluon) (0.8.2)\n","Requirement already satisfied: numpy<1.27,>=1.21 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (1.22.4)\n","Requirement already satisfied: scipy<1.12,>=1.5.4 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (1.10.1)\n","Requirement already satisfied: scikit-learn<1.3,>=1.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (1.2.2)\n","Requirement already satisfied: networkx<4,>=3.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (3.1)\n","Requirement already satisfied: pandas<1.6,>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (1.5.3)\n","Requirement already satisfied: tqdm<5,>=4.38 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (4.65.0)\n","Requirement already satisfied: requests in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (2.27.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (3.7.1)\n","Requirement already satisfied: boto3<2,>=1.10 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (1.28.8)\n","Requirement already satisfied: autogluon.common==0.8.2 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (0.8.2)\n","Requirement already satisfied: hyperopt<0.2.8,>=0.2.7 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (0.2.7)\n","Requirement already satisfied: ray[default]<2.4,>=2.3 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (2.3.1)\n","Requirement already satisfied: pydantic<2.0,>=1.10.4 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (1.10.11)\n","Requirement already satisfied: grpcio<=1.50.0,>=1.42.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.core[all]==0.8.2->autogluon) (1.50.0)\n","Requirement already satisfied: Pillow<9.6,>=9.3 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (9.5.0)\n","Requirement already satisfied: jsonschema<4.18,>=4.14 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (4.17.3)\n","Requirement already satisfied: seqeval<1.3.0,>=1.2.2 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (1.2.2)\n","Requirement already satisfied: evaluate<0.4.0,>=0.2.2 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (0.3.0)\n","Requirement already satisfied: accelerate<0.17,>=0.9 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (0.16.0)\n","Requirement already satisfied: timm<0.10.0,>=0.9.2 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (0.9.2)\n","Requirement already satisfied: torch<1.14,>=1.9 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (1.13.1)\n","Requirement already satisfied: torchvision<0.15.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (0.14.1)\n","Requirement already satisfied: scikit-image<0.20.0,>=0.19.1 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (0.19.3)\n","Requirement already satisfied: pytorch-lightning<1.10.0,>=1.9.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (1.9.5)\n","Requirement already satisfied: text-unidecode<1.4,>=1.3 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (1.3)\n","Requirement already satisfied: torchmetrics<0.12.0,>=0.11.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (0.11.4)\n","Requirement already satisfied: transformers[sentencepiece]<4.27.0,>=4.23.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (4.26.1)\n","Requirement already satisfied: nptyping<2.5.0,>=1.4.4 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (2.4.1)\n","Requirement already satisfied: omegaconf<2.3.0,>=2.1.1 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (2.2.3)\n","Requirement already satisfied: pytorch-metric-learning<2.0,>=1.3.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (1.7.3)\n","Requirement already satisfied: nlpaug<1.2.0,>=1.1.10 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (1.1.11)\n","Requirement already satisfied: nltk<4.0.0,>=3.4.5 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (3.8.1)\n","Requirement already satisfied: openmim<0.4.0,>=0.3.7 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (0.3.9)\n","Requirement already satisfied: defusedxml<0.7.2,>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (0.7.1)\n","Requirement already satisfied: jinja2<3.2,>=3.0.3 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (3.1.2)\n","Requirement already satisfied: tensorboard<3,>=2.9 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (2.12.3)\n","Requirement already satisfied: pytesseract<0.3.11,>=0.3.9 in /usr/local/lib/python3.10/dist-packages (from autogluon.multimodal==0.8.2->autogluon) (0.3.10)\n","Requirement already satisfied: lightgbm<3.4,>=3.3 in /usr/local/lib/python3.10/dist-packages (from autogluon.tabular[all]==0.8.2->autogluon) (3.3.5)\n","Requirement already satisfied: xgboost<1.8,>=1.6 in /usr/local/lib/python3.10/dist-packages (from autogluon.tabular[all]==0.8.2->autogluon) (1.7.6)\n","Requirement already satisfied: fastai<2.8,>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from autogluon.tabular[all]==0.8.2->autogluon) (2.7.12)\n","Requirement already satisfied: catboost<1.3,>=1.1 in /usr/local/lib/python3.10/dist-packages (from autogluon.tabular[all]==0.8.2->autogluon) (1.2)\n","Requirement already satisfied: joblib<2,>=1.1 in /usr/local/lib/python3.10/dist-packages (from autogluon.timeseries[all]==0.8.2->autogluon) (1.3.1)\n","Requirement already satisfied: statsmodels<0.15,>=0.13.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.timeseries[all]==0.8.2->autogluon) (0.13.5)\n","Requirement already satisfied: gluonts<0.14,>=0.13.1 in /usr/local/lib/python3.10/dist-packages (from autogluon.timeseries[all]==0.8.2->autogluon) (0.13.2)\n","Requirement already satisfied: statsforecast<1.5,>=1.4.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.timeseries[all]==0.8.2->autogluon) (1.4.0)\n","Requirement already satisfied: mlforecast<0.7.4,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from autogluon.timeseries[all]==0.8.2->autogluon) (0.7.3)\n","Requirement already satisfied: ujson<6,>=5 in /usr/local/lib/python3.10/dist-packages (from autogluon.timeseries[all]==0.8.2->autogluon) (5.8.0)\n","Requirement already satisfied: psutil<6,>=5.7.3 in /usr/local/lib/python3.10/dist-packages (from autogluon.common==0.8.2->autogluon.core[all]==0.8.2->autogluon) (5.9.5)\n","Requirement already satisfied: setuptools in /usr/local/lib/python3.10/dist-packages (from autogluon.common==0.8.2->autogluon.core[all]==0.8.2->autogluon) (67.7.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from accelerate<0.17,>=0.9->autogluon.multimodal==0.8.2->autogluon) (23.1)\n","Requirement already satisfied: pyyaml in /usr/local/lib/python3.10/dist-packages (from accelerate<0.17,>=0.9->autogluon.multimodal==0.8.2->autogluon) (6.0)\n","Requirement already satisfied: botocore<1.32.0,>=1.31.8 in /usr/local/lib/python3.10/dist-packages (from boto3<2,>=1.10->autogluon.core[all]==0.8.2->autogluon) (1.31.8)\n","Requirement already satisfied: jmespath<2.0.0,>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from boto3<2,>=1.10->autogluon.core[all]==0.8.2->autogluon) (1.0.1)\n","Requirement already satisfied: s3transfer<0.7.0,>=0.6.0 in /usr/local/lib/python3.10/dist-packages (from boto3<2,>=1.10->autogluon.core[all]==0.8.2->autogluon) (0.6.1)\n","Requirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (from catboost<1.3,>=1.1->autogluon.tabular[all]==0.8.2->autogluon) (0.8.4)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.10/dist-packages (from catboost<1.3,>=1.1->autogluon.tabular[all]==0.8.2->autogluon) (5.13.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from catboost<1.3,>=1.1->autogluon.tabular[all]==0.8.2->autogluon) (1.16.0)\n","Requirement already satisfied: datasets>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from evaluate<0.4.0,>=0.2.2->autogluon.multimodal==0.8.2->autogluon) (2.13.1)\n","Requirement already satisfied: dill in /usr/local/lib/python3.10/dist-packages (from evaluate<0.4.0,>=0.2.2->autogluon.multimodal==0.8.2->autogluon) (0.3.6)\n","Requirement already satisfied: xxhash in /usr/local/lib/python3.10/dist-packages (from evaluate<0.4.0,>=0.2.2->autogluon.multimodal==0.8.2->autogluon) (3.2.0)\n","Requirement already satisfied: multiprocess in /usr/local/lib/python3.10/dist-packages (from evaluate<0.4.0,>=0.2.2->autogluon.multimodal==0.8.2->autogluon) (0.70.14)\n","Requirement already satisfied: fsspec[http]>=2021.05.0 in /usr/local/lib/python3.10/dist-packages (from evaluate<0.4.0,>=0.2.2->autogluon.multimodal==0.8.2->autogluon) (2023.6.0)\n","Requirement already satisfied: huggingface-hub>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from evaluate<0.4.0,>=0.2.2->autogluon.multimodal==0.8.2->autogluon) (0.16.4)\n","Requirement already satisfied: responses<0.19 in /usr/local/lib/python3.10/dist-packages (from evaluate<0.4.0,>=0.2.2->autogluon.multimodal==0.8.2->autogluon) (0.18.0)\n","Requirement already satisfied: pip in /usr/local/lib/python3.10/dist-packages (from fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (23.1.2)\n","Requirement already satisfied: fastdownload<2,>=0.0.5 in /usr/local/lib/python3.10/dist-packages (from fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (0.0.7)\n","Requirement already satisfied: fastcore<1.6,>=1.5.29 in /usr/local/lib/python3.10/dist-packages (from fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (1.5.29)\n","Requirement already satisfied: fastprogress>=0.2.4 in /usr/local/lib/python3.10/dist-packages (from fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (1.0.3)\n","Requirement already satisfied: spacy<4 in /usr/local/lib/python3.10/dist-packages (from fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (3.5.4)\n","Requirement already satisfied: toolz~=0.10 in /usr/local/lib/python3.10/dist-packages (from gluonts<0.14,>=0.13.1->autogluon.timeseries[all]==0.8.2->autogluon) (0.12.0)\n","Requirement already satisfied: typing-extensions~=4.0 in /usr/local/lib/python3.10/dist-packages (from gluonts<0.14,>=0.13.1->autogluon.timeseries[all]==0.8.2->autogluon) (4.7.1)\n","Requirement already satisfied: future in /usr/local/lib/python3.10/dist-packages (from hyperopt<0.2.8,>=0.2.7->autogluon.core[all]==0.8.2->autogluon) (0.18.3)\n","Requirement already satisfied: cloudpickle in /usr/local/lib/python3.10/dist-packages (from hyperopt<0.2.8,>=0.2.7->autogluon.core[all]==0.8.2->autogluon) (2.2.1)\n","Requirement already satisfied: py4j in /usr/local/lib/python3.10/dist-packages (from hyperopt<0.2.8,>=0.2.7->autogluon.core[all]==0.8.2->autogluon) (0.10.9.7)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2<3.2,>=3.0.3->autogluon.multimodal==0.8.2->autogluon) (2.1.3)\n","Requirement already satisfied: attrs>=17.4.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema<4.18,>=4.14->autogluon.multimodal==0.8.2->autogluon) (23.1.0)\n","Requirement already satisfied: pyrsistent!=0.17.0,!=0.17.1,!=0.17.2,>=0.14.0 in /usr/local/lib/python3.10/dist-packages (from jsonschema<4.18,>=4.14->autogluon.multimodal==0.8.2->autogluon) (0.19.3)\n","Requirement already satisfied: wheel in /usr/local/lib/python3.10/dist-packages (from lightgbm<3.4,>=3.3->autogluon.tabular[all]==0.8.2->autogluon) (0.40.0)\n","Requirement already satisfied: numba in /usr/local/lib/python3.10/dist-packages (from mlforecast<0.7.4,>=0.7.0->autogluon.timeseries[all]==0.8.2->autogluon) (0.56.4)\n","Requirement already satisfied: window-ops in /usr/local/lib/python3.10/dist-packages (from mlforecast<0.7.4,>=0.7.0->autogluon.timeseries[all]==0.8.2->autogluon) (0.0.14)\n","Requirement already satisfied: gdown>=4.0.0 in /usr/local/lib/python3.10/dist-packages (from nlpaug<1.2.0,>=1.1.10->autogluon.multimodal==0.8.2->autogluon) (4.6.6)\n","Requirement already satisfied: click in /usr/local/lib/python3.10/dist-packages (from nltk<4.0.0,>=3.4.5->autogluon.multimodal==0.8.2->autogluon) (8.1.4)\n","Requirement already satisfied: regex>=2021.8.3 in /usr/local/lib/python3.10/dist-packages (from nltk<4.0.0,>=3.4.5->autogluon.multimodal==0.8.2->autogluon) (2022.10.31)\n","Requirement already satisfied: antlr4-python3-runtime==4.9.* in /usr/local/lib/python3.10/dist-packages (from omegaconf<2.3.0,>=2.1.1->autogluon.multimodal==0.8.2->autogluon) (4.9.3)\n","Requirement already satisfied: colorama in /usr/local/lib/python3.10/dist-packages (from openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (0.4.6)\n","Requirement already satisfied: model-index in /usr/local/lib/python3.10/dist-packages (from openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (0.1.11)\n","Requirement already satisfied: opendatalab in /usr/local/lib/python3.10/dist-packages (from openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (0.0.9)\n","Requirement already satisfied: rich in /usr/local/lib/python3.10/dist-packages (from openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (13.4.2)\n","Requirement already satisfied: tabulate in /usr/local/lib/python3.10/dist-packages (from openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (0.8.10)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas<1.6,>=1.4.1->autogluon.core[all]==0.8.2->autogluon) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas<1.6,>=1.4.1->autogluon.core[all]==0.8.2->autogluon) (2022.7.1)\n","Requirement already satisfied: lightning-utilities>=0.6.0.post0 in /usr/local/lib/python3.10/dist-packages (from pytorch-lightning<1.10.0,>=1.9.0->autogluon.multimodal==0.8.2->autogluon) (0.9.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (3.12.2)\n","Requirement already satisfied: msgpack<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (1.0.5)\n","Requirement already satisfied: protobuf!=3.19.5,>=3.15.3 in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (3.20.2)\n","Requirement already satisfied: aiosignal in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (1.3.1)\n","Requirement already satisfied: frozenlist in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (1.4.0)\n","Requirement already satisfied: virtualenv>=20.0.24 in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (20.24.1)\n","Requirement already satisfied: aiohttp>=3.7 in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (3.8.4)\n","Requirement already satisfied: aiohttp-cors in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (0.7.0)\n","Requirement already satisfied: colorful in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (0.5.5)\n","Requirement already satisfied: py-spy>=0.2.0 in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (0.3.14)\n","Requirement already satisfied: gpustat>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (1.1)\n","Requirement already satisfied: opencensus in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (0.11.2)\n","Requirement already satisfied: prometheus-client>=0.7.1 in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (0.17.1)\n","Requirement already satisfied: smart-open in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (6.3.0)\n","Requirement already satisfied: tensorboardX>=1.9 in /usr/local/lib/python3.10/dist-packages (from ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (2.6)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests->autogluon.core[all]==0.8.2->autogluon) (1.26.16)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests->autogluon.core[all]==0.8.2->autogluon) (2023.5.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.10/dist-packages (from requests->autogluon.core[all]==0.8.2->autogluon) (2.0.12)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests->autogluon.core[all]==0.8.2->autogluon) (3.4)\n","Requirement already satisfied: imageio>=2.4.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image<0.20.0,>=0.19.1->autogluon.multimodal==0.8.2->autogluon) (2.25.1)\n","Requirement already satisfied: tifffile>=2019.7.26 in /usr/local/lib/python3.10/dist-packages (from scikit-image<0.20.0,>=0.19.1->autogluon.multimodal==0.8.2->autogluon) (2023.7.10)\n","Requirement already satisfied: PyWavelets>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-image<0.20.0,>=0.19.1->autogluon.multimodal==0.8.2->autogluon) (1.4.1)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn<1.3,>=1.0->autogluon.core[all]==0.8.2->autogluon) (3.1.0)\n","Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.10/dist-packages (from statsmodels<0.15,>=0.13.0->autogluon.timeseries[all]==0.8.2->autogluon) (0.5.3)\n","Requirement already satisfied: absl-py>=0.4 in /usr/local/lib/python3.10/dist-packages (from tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (1.4.0)\n","Requirement already satisfied: google-auth<3,>=1.6.3 in /usr/local/lib/python3.10/dist-packages (from tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (2.17.3)\n","Requirement already satisfied: google-auth-oauthlib<1.1,>=0.5 in /usr/local/lib/python3.10/dist-packages (from tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (1.0.0)\n","Requirement already satisfied: markdown>=2.6.8 in /usr/local/lib/python3.10/dist-packages (from tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (3.4.3)\n","Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (0.7.1)\n","Requirement already satisfied: werkzeug>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (2.3.6)\n","Requirement already satisfied: safetensors in /usr/local/lib/python3.10/dist-packages (from timm<0.10.0,>=0.9.2->autogluon.multimodal==0.8.2->autogluon) (0.3.1)\n","Requirement already satisfied: nvidia-cuda-runtime-cu11==11.7.99 in /usr/local/lib/python3.10/dist-packages (from torch<1.14,>=1.9->autogluon.multimodal==0.8.2->autogluon) (11.7.99)\n","Requirement already satisfied: nvidia-cudnn-cu11==8.5.0.96 in /usr/local/lib/python3.10/dist-packages (from torch<1.14,>=1.9->autogluon.multimodal==0.8.2->autogluon) (8.5.0.96)\n","Requirement already satisfied: nvidia-cublas-cu11==11.10.3.66 in /usr/local/lib/python3.10/dist-packages (from torch<1.14,>=1.9->autogluon.multimodal==0.8.2->autogluon) (11.10.3.66)\n","Requirement already satisfied: nvidia-cuda-nvrtc-cu11==11.7.99 in /usr/local/lib/python3.10/dist-packages (from torch<1.14,>=1.9->autogluon.multimodal==0.8.2->autogluon) (11.7.99)\n","Requirement already satisfied: tokenizers!=0.11.3,<0.14,>=0.11.1 in /usr/local/lib/python3.10/dist-packages (from transformers[sentencepiece]<4.27.0,>=4.23.0->autogluon.multimodal==0.8.2->autogluon) (0.13.3)\n","Requirement already satisfied: sentencepiece!=0.1.92,>=0.1.91 in /usr/local/lib/python3.10/dist-packages (from transformers[sentencepiece]<4.27.0,>=4.23.0->autogluon.multimodal==0.8.2->autogluon) (0.1.99)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->autogluon.core[all]==0.8.2->autogluon) (1.1.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib->autogluon.core[all]==0.8.2->autogluon) (0.11.0)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib->autogluon.core[all]==0.8.2->autogluon) (4.41.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->autogluon.core[all]==0.8.2->autogluon) (1.4.4)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib->autogluon.core[all]==0.8.2->autogluon) (3.1.0)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.7->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (6.0.4)\n","Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.7->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (4.0.2)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.10/dist-packages (from aiohttp>=3.7->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (1.9.2)\n","Requirement already satisfied: pyarrow>=8.0.0 in /usr/local/lib/python3.10/dist-packages (from datasets>=2.0.0->evaluate<0.4.0,>=0.2.2->autogluon.multimodal==0.8.2->autogluon) (9.0.0)\n","Requirement already satisfied: beautifulsoup4 in /usr/local/lib/python3.10/dist-packages (from gdown>=4.0.0->nlpaug<1.2.0,>=1.1.10->autogluon.multimodal==0.8.2->autogluon) (4.11.2)\n","Requirement already satisfied: cachetools<6.0,>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (5.3.1)\n","Requirement already satisfied: pyasn1-modules>=0.2.1 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (0.3.0)\n","Requirement already satisfied: rsa<5,>=3.1.4 in /usr/local/lib/python3.10/dist-packages (from google-auth<3,>=1.6.3->tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (4.9)\n","Requirement already satisfied: requests-oauthlib>=0.7.0 in /usr/local/lib/python3.10/dist-packages (from google-auth-oauthlib<1.1,>=0.5->tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (1.3.1)\n","Requirement already satisfied: nvidia-ml-py>=11.450.129 in /usr/local/lib/python3.10/dist-packages (from gpustat>=1.0.0->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (12.535.77)\n","Requirement already satisfied: blessed>=1.17.1 in /usr/local/lib/python3.10/dist-packages (from gpustat>=1.0.0->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (1.20.0)\n","Requirement already satisfied: llvmlite<0.40,>=0.39.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba->mlforecast<0.7.4,>=0.7.0->autogluon.timeseries[all]==0.8.2->autogluon) (0.39.1)\n","Requirement already satisfied: spacy-legacy<3.1.0,>=3.0.11 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (3.0.12)\n","Requirement already satisfied: spacy-loggers<2.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (1.0.4)\n","Requirement already satisfied: murmurhash<1.1.0,>=0.28.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (1.0.9)\n","Requirement already satisfied: cymem<2.1.0,>=2.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (2.0.7)\n","Requirement already satisfied: preshed<3.1.0,>=3.0.2 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (3.0.8)\n","Requirement already satisfied: thinc<8.2.0,>=8.1.8 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (8.1.10)\n","Requirement already satisfied: wasabi<1.2.0,>=0.9.1 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (1.1.2)\n","Requirement already satisfied: srsly<3.0.0,>=2.4.3 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (2.4.6)\n","Requirement already satisfied: catalogue<2.1.0,>=2.0.6 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (2.0.8)\n","Requirement already satisfied: typer<0.10.0,>=0.3.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (0.9.0)\n","Requirement already satisfied: pathy>=0.10.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (0.10.2)\n","Requirement already satisfied: langcodes<4.0.0,>=3.2.0 in /usr/local/lib/python3.10/dist-packages (from spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (3.3.0)\n","Requirement already satisfied: distlib<1,>=0.3.6 in /usr/local/lib/python3.10/dist-packages (from virtualenv>=20.0.24->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (0.3.7)\n","Requirement already satisfied: platformdirs<4,>=3.5.1 in /usr/local/lib/python3.10/dist-packages (from virtualenv>=20.0.24->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (3.8.1)\n","Requirement already satisfied: ordered-set in /usr/local/lib/python3.10/dist-packages (from model-index->openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (4.1.0)\n","Requirement already satisfied: opencensus-context>=0.1.3 in /usr/local/lib/python3.10/dist-packages (from opencensus->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (0.1.3)\n","Requirement already satisfied: google-api-core<3.0.0,>=1.0.0 in /usr/local/lib/python3.10/dist-packages (from opencensus->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (2.11.1)\n","Requirement already satisfied: pycryptodome in /usr/local/lib/python3.10/dist-packages (from opendatalab->openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (3.18.0)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.10/dist-packages (from plotly->catboost<1.3,>=1.1->autogluon.tabular[all]==0.8.2->autogluon) (8.2.2)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.10/dist-packages (from rich->openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.10/dist-packages (from rich->openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (2.14.0)\n","Requirement already satisfied: wcwidth>=0.1.4 in /usr/local/lib/python3.10/dist-packages (from blessed>=1.17.1->gpustat>=1.0.0->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (0.2.6)\n","Requirement already satisfied: googleapis-common-protos<2.0.dev0,>=1.56.2 in /usr/local/lib/python3.10/dist-packages (from google-api-core<3.0.0,>=1.0.0->opencensus->ray[default]<2.4,>=2.3->autogluon.core[all]==0.8.2->autogluon) (1.59.1)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.10/dist-packages (from markdown-it-py>=2.2.0->rich->openmim<0.4.0,>=0.3.7->autogluon.multimodal==0.8.2->autogluon) (0.1.2)\n","Requirement already satisfied: pyasn1<0.6.0,>=0.4.6 in /usr/local/lib/python3.10/dist-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (0.5.0)\n","Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.10/dist-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<1.1,>=0.5->tensorboard<3,>=2.9->autogluon.multimodal==0.8.2->autogluon) (3.2.2)\n","Requirement already satisfied: blis<0.8.0,>=0.7.8 in /usr/local/lib/python3.10/dist-packages (from thinc<8.2.0,>=8.1.8->spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (0.7.9)\n","Requirement already satisfied: confection<1.0.0,>=0.0.1 in /usr/local/lib/python3.10/dist-packages (from thinc<8.2.0,>=8.1.8->spacy<4->fastai<2.8,>=2.3.1->autogluon.tabular[all]==0.8.2->autogluon) (0.1.0)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.10/dist-packages (from beautifulsoup4->gdown>=4.0.0->nlpaug<1.2.0,>=1.1.10->autogluon.multimodal==0.8.2->autogluon) (2.4.1)\n","Requirement already satisfied: PySocks!=1.5.7,>=1.5.6 in /usr/local/lib/python3.10/dist-packages (from requests->autogluon.core[all]==0.8.2->autogluon) (1.7.1)\n"]}]},{"cell_type":"code","source":["# from google.colab import drive\n","# drive.mount('/content/drive')"],"metadata":{"id":"6OjsSo2rr1oU","executionInfo":{"status":"ok","timestamp":1689898615534,"user_tz":-120,"elapsed":6,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":206,"outputs":[]},{"cell_type":"code","source":["import autogluon as ag"],"metadata":{"id":"iO9yigo_Upag","executionInfo":{"status":"ok","timestamp":1689898615534,"user_tz":-120,"elapsed":5,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":207,"outputs":[]},{"cell_type":"code","source":["from autogluon.tabular import TabularDataset, TabularPredictor\n","import pandas as pd\n"],"metadata":{"id":"HkJW04nsUuPk","executionInfo":{"status":"ok","timestamp":1689898615535,"user_tz":-120,"elapsed":6,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":208,"outputs":[]},{"cell_type":"code","source":["df = pd.read_csv('https://raw.githubusercontent.com/jbrownlee/Datasets/master/pollution.csv', index_col=0)\n","\n","df.head()\n","df.index.name = 'date'\n","df.index = pd.to_datetime(df[['year', 'month', 'day', 'hour']])\n","df.drop(['year', 'month', 'day', 'hour'], axis=1, inplace=True)\n","df = df[24:]\n","df.describe()\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"t664IMTbd4JA","executionInfo":{"status":"ok","timestamp":1689898615988,"user_tz":-120,"elapsed":459,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"5e1c6d09-82bc-4aab-ceb8-6c07fc320758"},"execution_count":209,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              pm2.5          DEWP          TEMP          PRES           Iws  \\\n","count  41757.000000  43800.000000  43800.000000  43800.000000  43800.000000   \n","mean      98.613215      1.828516     12.459041   1016.447306     23.894307   \n","std       92.050387     14.429326     12.193384     10.271411     50.022729   \n","min        0.000000    -40.000000    -19.000000    991.000000      0.450000   \n","25%       29.000000    -10.000000      2.000000   1008.000000      1.790000   \n","50%       72.000000      2.000000     14.000000   1016.000000      5.370000   \n","75%      137.000000     15.000000     23.000000   1025.000000     21.910000   \n","max      994.000000     28.000000     42.000000   1046.000000    585.600000   \n","\n","                 Is            Ir  \n","count  43800.000000  43800.000000  \n","mean       0.052763      0.195023  \n","std        0.760582      1.416247  \n","min        0.000000      0.000000  \n","25%        0.000000      0.000000  \n","50%        0.000000      0.000000  \n","75%        0.000000      0.000000  \n","max       27.000000     36.000000  "],"text/html":["\n","\n","  <div id=\"df-9e99bb1d-ea32-4479-8bea-6115f24d95c6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pm2.5</th>\n","      <th>DEWP</th>\n","      <th>TEMP</th>\n","      <th>PRES</th>\n","      <th>Iws</th>\n","      <th>Is</th>\n","      <th>Ir</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>41757.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>98.613215</td>\n","      <td>1.828516</td>\n","      <td>12.459041</td>\n","      <td>1016.447306</td>\n","      <td>23.894307</td>\n","      <td>0.052763</td>\n","      <td>0.195023</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>92.050387</td>\n","      <td>14.429326</td>\n","      <td>12.193384</td>\n","      <td>10.271411</td>\n","      <td>50.022729</td>\n","      <td>0.760582</td>\n","      <td>1.416247</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>-40.000000</td>\n","      <td>-19.000000</td>\n","      <td>991.000000</td>\n","      <td>0.450000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>29.000000</td>\n","      <td>-10.000000</td>\n","      <td>2.000000</td>\n","      <td>1008.000000</td>\n","      <td>1.790000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>72.000000</td>\n","      <td>2.000000</td>\n","      <td>14.000000</td>\n","      <td>1016.000000</td>\n","      <td>5.370000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>137.000000</td>\n","      <td>15.000000</td>\n","      <td>23.000000</td>\n","      <td>1025.000000</td>\n","      <td>21.910000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>994.000000</td>\n","      <td>28.000000</td>\n","      <td>42.000000</td>\n","      <td>1046.000000</td>\n","      <td>585.600000</td>\n","      <td>27.000000</td>\n","      <td>36.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9e99bb1d-ea32-4479-8bea-6115f24d95c6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-e1eb9d66-e0f1-474e-a149-026959beb764\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e1eb9d66-e0f1-474e-a149-026959beb764')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-e1eb9d66-e0f1-474e-a149-026959beb764 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-9e99bb1d-ea32-4479-8bea-6115f24d95c6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-9e99bb1d-ea32-4479-8bea-6115f24d95c6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":209}]},{"cell_type":"code","source":["df.drop(['cbwd'],axis=1, inplace=True)"],"metadata":{"id":"RKBjXnIomg4O","executionInfo":{"status":"ok","timestamp":1689898615988,"user_tz":-120,"elapsed":10,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":210,"outputs":[]},{"cell_type":"code","source":["\n","d = df['pm2.5']\n","s_fwd = d.interpolate(method=\"polynomial\", order=3, limit_direction='forward')\n","s_bkd = d.interpolate(method=\"polynomial\", order=3, limit_direction='backward')\n","print(s_fwd.count())\n","print(s_bkd.count())\n","type(s_bkd)\n","tmp_df = pd.DataFrame()\n","tmp_df['fwd'] = s_fwd\n","tmp_df['bkd'] = s_bkd\n","tmp_df['mean'] = tmp_df.mean(axis=1)\n","tmp_df['mean'][tmp_df['mean'] < 0] = 0\n","\n","df['pm2.5'] = tmp_df['mean']\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QycPnHOsBWAs","executionInfo":{"status":"ok","timestamp":1689898615988,"user_tz":-120,"elapsed":10,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"de40ad8a-210a-443e-8f8b-d2f0d7dc69d7"},"execution_count":211,"outputs":[{"output_type":"stream","name":"stdout","text":["43800\n","43800\n"]}]},{"cell_type":"code","source":["df2 = df.copy()\n","num_lags = 10 # number of lags and window lenghts for mean aggregation\n","delay = 1 # predict target one step ahead\n","for column in df2:\n","  print(column)\n","  for lag in range(1,num_lags+1):\n","      df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","      if column != 'wnd_dir':\n","          df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","\n","df2.dropna(inplace=True)\n","\n","mask = (df2.columns.str.contains('pm2.5') | df2.columns.str.contains('lag') | df2.columns.str.contains('window'))\n","df_processed = df2[df2.columns[mask]]\n","\n","# the columns in the processed dataframe\n","df_processed.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7UrDBKI6kU4a","executionInfo":{"status":"ok","timestamp":1689898616406,"user_tz":-120,"elapsed":426,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"c74029da-7da4-4408-8173-5da3b7a73ada"},"execution_count":212,"outputs":[{"output_type":"stream","name":"stdout","text":["pm2.5\n","DEWP\n","TEMP\n","PRES\n","Iws\n","Is\n","Ir\n"]},{"output_type":"stream","name":"stderr","text":["<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","<ipython-input-212-994f4539b949>:7: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","<ipython-input-212-994f4539b949>:9: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`\n","  df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n"]},{"output_type":"execute_result","data":{"text/plain":["Index(['pm2.5', 'pm2.5_lag1', 'pm2.5_avg_window_length2', 'pm2.5_lag2',\n","       'pm2.5_avg_window_length3', 'pm2.5_lag3', 'pm2.5_avg_window_length4',\n","       'pm2.5_lag4', 'pm2.5_avg_window_length5', 'pm2.5_lag5',\n","       ...\n","       'Ir_lag6', 'Ir_avg_window_length7', 'Ir_lag7', 'Ir_avg_window_length8',\n","       'Ir_lag8', 'Ir_avg_window_length9', 'Ir_lag9', 'Ir_avg_window_length10',\n","       'Ir_lag10', 'Ir_avg_window_length11'],\n","      dtype='object', length=141)"]},"metadata":{},"execution_count":212}]},{"cell_type":"code","source":["df_processed['time']= df_processed.index\n","df_train = df_processed[:int(df_processed.shape[0] * 0.8)]\n","df_test = df_processed[int(df_processed.shape[0] * 0.8):]\n"],"metadata":{"id":"HlcWPTz-BsUG","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1689898616407,"user_tz":-120,"elapsed":46,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"fb08bb9d-82f4-4917-cb18-00d2aad92f5f"},"execution_count":213,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-213-92f270851837>:1: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df_processed['time']= df_processed.index\n"]}]},{"cell_type":"code","source":["train_data = TabularDataset(df_train)\n"],"metadata":{"id":"G8z8GC-reA3d","executionInfo":{"status":"ok","timestamp":1689898616407,"user_tz":-120,"elapsed":39,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":214,"outputs":[]},{"cell_type":"code","source":["type(str(df_train.loc[:, df_train.columns != 'pm2.5'].columns))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BhdSc2rkmy2l","executionInfo":{"status":"ok","timestamp":1689898616408,"user_tz":-120,"elapsed":40,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"3793e979-f782-4964-ef33-2eaf3c84e3fb"},"execution_count":215,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{},"execution_count":215}]},{"cell_type":"code","source":["df_train.loc[:, df_train.columns != 'pm2.5'].columns.tolist()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"J5TQZSpkn5wY","executionInfo":{"status":"ok","timestamp":1689898616408,"user_tz":-120,"elapsed":38,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"2f12f2d2-3344-43b0-a010-769c05bb83e8"},"execution_count":216,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['pm2.5_lag1',\n"," 'pm2.5_avg_window_length2',\n"," 'pm2.5_lag2',\n"," 'pm2.5_avg_window_length3',\n"," 'pm2.5_lag3',\n"," 'pm2.5_avg_window_length4',\n"," 'pm2.5_lag4',\n"," 'pm2.5_avg_window_length5',\n"," 'pm2.5_lag5',\n"," 'pm2.5_avg_window_length6',\n"," 'pm2.5_lag6',\n"," 'pm2.5_avg_window_length7',\n"," 'pm2.5_lag7',\n"," 'pm2.5_avg_window_length8',\n"," 'pm2.5_lag8',\n"," 'pm2.5_avg_window_length9',\n"," 'pm2.5_lag9',\n"," 'pm2.5_avg_window_length10',\n"," 'pm2.5_lag10',\n"," 'pm2.5_avg_window_length11',\n"," 'DEWP_lag1',\n"," 'DEWP_avg_window_length2',\n"," 'DEWP_lag2',\n"," 'DEWP_avg_window_length3',\n"," 'DEWP_lag3',\n"," 'DEWP_avg_window_length4',\n"," 'DEWP_lag4',\n"," 'DEWP_avg_window_length5',\n"," 'DEWP_lag5',\n"," 'DEWP_avg_window_length6',\n"," 'DEWP_lag6',\n"," 'DEWP_avg_window_length7',\n"," 'DEWP_lag7',\n"," 'DEWP_avg_window_length8',\n"," 'DEWP_lag8',\n"," 'DEWP_avg_window_length9',\n"," 'DEWP_lag9',\n"," 'DEWP_avg_window_length10',\n"," 'DEWP_lag10',\n"," 'DEWP_avg_window_length11',\n"," 'TEMP_lag1',\n"," 'TEMP_avg_window_length2',\n"," 'TEMP_lag2',\n"," 'TEMP_avg_window_length3',\n"," 'TEMP_lag3',\n"," 'TEMP_avg_window_length4',\n"," 'TEMP_lag4',\n"," 'TEMP_avg_window_length5',\n"," 'TEMP_lag5',\n"," 'TEMP_avg_window_length6',\n"," 'TEMP_lag6',\n"," 'TEMP_avg_window_length7',\n"," 'TEMP_lag7',\n"," 'TEMP_avg_window_length8',\n"," 'TEMP_lag8',\n"," 'TEMP_avg_window_length9',\n"," 'TEMP_lag9',\n"," 'TEMP_avg_window_length10',\n"," 'TEMP_lag10',\n"," 'TEMP_avg_window_length11',\n"," 'PRES_lag1',\n"," 'PRES_avg_window_length2',\n"," 'PRES_lag2',\n"," 'PRES_avg_window_length3',\n"," 'PRES_lag3',\n"," 'PRES_avg_window_length4',\n"," 'PRES_lag4',\n"," 'PRES_avg_window_length5',\n"," 'PRES_lag5',\n"," 'PRES_avg_window_length6',\n"," 'PRES_lag6',\n"," 'PRES_avg_window_length7',\n"," 'PRES_lag7',\n"," 'PRES_avg_window_length8',\n"," 'PRES_lag8',\n"," 'PRES_avg_window_length9',\n"," 'PRES_lag9',\n"," 'PRES_avg_window_length10',\n"," 'PRES_lag10',\n"," 'PRES_avg_window_length11',\n"," 'Iws_lag1',\n"," 'Iws_avg_window_length2',\n"," 'Iws_lag2',\n"," 'Iws_avg_window_length3',\n"," 'Iws_lag3',\n"," 'Iws_avg_window_length4',\n"," 'Iws_lag4',\n"," 'Iws_avg_window_length5',\n"," 'Iws_lag5',\n"," 'Iws_avg_window_length6',\n"," 'Iws_lag6',\n"," 'Iws_avg_window_length7',\n"," 'Iws_lag7',\n"," 'Iws_avg_window_length8',\n"," 'Iws_lag8',\n"," 'Iws_avg_window_length9',\n"," 'Iws_lag9',\n"," 'Iws_avg_window_length10',\n"," 'Iws_lag10',\n"," 'Iws_avg_window_length11',\n"," 'Is_lag1',\n"," 'Is_avg_window_length2',\n"," 'Is_lag2',\n"," 'Is_avg_window_length3',\n"," 'Is_lag3',\n"," 'Is_avg_window_length4',\n"," 'Is_lag4',\n"," 'Is_avg_window_length5',\n"," 'Is_lag5',\n"," 'Is_avg_window_length6',\n"," 'Is_lag6',\n"," 'Is_avg_window_length7',\n"," 'Is_lag7',\n"," 'Is_avg_window_length8',\n"," 'Is_lag8',\n"," 'Is_avg_window_length9',\n"," 'Is_lag9',\n"," 'Is_avg_window_length10',\n"," 'Is_lag10',\n"," 'Is_avg_window_length11',\n"," 'Ir_lag1',\n"," 'Ir_avg_window_length2',\n"," 'Ir_lag2',\n"," 'Ir_avg_window_length3',\n"," 'Ir_lag3',\n"," 'Ir_avg_window_length4',\n"," 'Ir_lag4',\n"," 'Ir_avg_window_length5',\n"," 'Ir_lag5',\n"," 'Ir_avg_window_length6',\n"," 'Ir_lag6',\n"," 'Ir_avg_window_length7',\n"," 'Ir_lag7',\n"," 'Ir_avg_window_length8',\n"," 'Ir_lag8',\n"," 'Ir_avg_window_length9',\n"," 'Ir_lag9',\n"," 'Ir_avg_window_length10',\n"," 'Ir_lag10',\n"," 'Ir_avg_window_length11',\n"," 'time']"]},"metadata":{},"execution_count":216}]},{"cell_type":"code","source":["target_col = 'pm2.5'\n","type(target_col)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6H5YFu80nyp0","executionInfo":{"status":"ok","timestamp":1689898616408,"user_tz":-120,"elapsed":37,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"85e325e4-bd45-4c48-d434-f5839589ede0"},"execution_count":217,"outputs":[{"output_type":"execute_result","data":{"text/plain":["str"]},"metadata":{},"execution_count":217}]},{"cell_type":"code","source":["# Set the target column and feature columns\n","target_col = 'pm2.5'\n","feature_cols = df_train.loc[:, df_train.columns != 'pm2.5'].columns.tolist()\n","# ['DEWP', 'TEMP', 'PRES', 'Iws', 'Is', 'Ir']\n","x = feature_cols\n","x.append(target_col)"],"metadata":{"id":"Mul1DLh8qOxj","executionInfo":{"status":"ok","timestamp":1689898616409,"user_tz":-120,"elapsed":27,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":218,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xXHs7vO8B13g","executionInfo":{"status":"ok","timestamp":1689898616409,"user_tz":-120,"elapsed":27,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"49fb3820-fd26-444c-c2e8-1a53acf2e656"},"execution_count":219,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['pm2.5_lag1',\n"," 'pm2.5_avg_window_length2',\n"," 'pm2.5_lag2',\n"," 'pm2.5_avg_window_length3',\n"," 'pm2.5_lag3',\n"," 'pm2.5_avg_window_length4',\n"," 'pm2.5_lag4',\n"," 'pm2.5_avg_window_length5',\n"," 'pm2.5_lag5',\n"," 'pm2.5_avg_window_length6',\n"," 'pm2.5_lag6',\n"," 'pm2.5_avg_window_length7',\n"," 'pm2.5_lag7',\n"," 'pm2.5_avg_window_length8',\n"," 'pm2.5_lag8',\n"," 'pm2.5_avg_window_length9',\n"," 'pm2.5_lag9',\n"," 'pm2.5_avg_window_length10',\n"," 'pm2.5_lag10',\n"," 'pm2.5_avg_window_length11',\n"," 'DEWP_lag1',\n"," 'DEWP_avg_window_length2',\n"," 'DEWP_lag2',\n"," 'DEWP_avg_window_length3',\n"," 'DEWP_lag3',\n"," 'DEWP_avg_window_length4',\n"," 'DEWP_lag4',\n"," 'DEWP_avg_window_length5',\n"," 'DEWP_lag5',\n"," 'DEWP_avg_window_length6',\n"," 'DEWP_lag6',\n"," 'DEWP_avg_window_length7',\n"," 'DEWP_lag7',\n"," 'DEWP_avg_window_length8',\n"," 'DEWP_lag8',\n"," 'DEWP_avg_window_length9',\n"," 'DEWP_lag9',\n"," 'DEWP_avg_window_length10',\n"," 'DEWP_lag10',\n"," 'DEWP_avg_window_length11',\n"," 'TEMP_lag1',\n"," 'TEMP_avg_window_length2',\n"," 'TEMP_lag2',\n"," 'TEMP_avg_window_length3',\n"," 'TEMP_lag3',\n"," 'TEMP_avg_window_length4',\n"," 'TEMP_lag4',\n"," 'TEMP_avg_window_length5',\n"," 'TEMP_lag5',\n"," 'TEMP_avg_window_length6',\n"," 'TEMP_lag6',\n"," 'TEMP_avg_window_length7',\n"," 'TEMP_lag7',\n"," 'TEMP_avg_window_length8',\n"," 'TEMP_lag8',\n"," 'TEMP_avg_window_length9',\n"," 'TEMP_lag9',\n"," 'TEMP_avg_window_length10',\n"," 'TEMP_lag10',\n"," 'TEMP_avg_window_length11',\n"," 'PRES_lag1',\n"," 'PRES_avg_window_length2',\n"," 'PRES_lag2',\n"," 'PRES_avg_window_length3',\n"," 'PRES_lag3',\n"," 'PRES_avg_window_length4',\n"," 'PRES_lag4',\n"," 'PRES_avg_window_length5',\n"," 'PRES_lag5',\n"," 'PRES_avg_window_length6',\n"," 'PRES_lag6',\n"," 'PRES_avg_window_length7',\n"," 'PRES_lag7',\n"," 'PRES_avg_window_length8',\n"," 'PRES_lag8',\n"," 'PRES_avg_window_length9',\n"," 'PRES_lag9',\n"," 'PRES_avg_window_length10',\n"," 'PRES_lag10',\n"," 'PRES_avg_window_length11',\n"," 'Iws_lag1',\n"," 'Iws_avg_window_length2',\n"," 'Iws_lag2',\n"," 'Iws_avg_window_length3',\n"," 'Iws_lag3',\n"," 'Iws_avg_window_length4',\n"," 'Iws_lag4',\n"," 'Iws_avg_window_length5',\n"," 'Iws_lag5',\n"," 'Iws_avg_window_length6',\n"," 'Iws_lag6',\n"," 'Iws_avg_window_length7',\n"," 'Iws_lag7',\n"," 'Iws_avg_window_length8',\n"," 'Iws_lag8',\n"," 'Iws_avg_window_length9',\n"," 'Iws_lag9',\n"," 'Iws_avg_window_length10',\n"," 'Iws_lag10',\n"," 'Iws_avg_window_length11',\n"," 'Is_lag1',\n"," 'Is_avg_window_length2',\n"," 'Is_lag2',\n"," 'Is_avg_window_length3',\n"," 'Is_lag3',\n"," 'Is_avg_window_length4',\n"," 'Is_lag4',\n"," 'Is_avg_window_length5',\n"," 'Is_lag5',\n"," 'Is_avg_window_length6',\n"," 'Is_lag6',\n"," 'Is_avg_window_length7',\n"," 'Is_lag7',\n"," 'Is_avg_window_length8',\n"," 'Is_lag8',\n"," 'Is_avg_window_length9',\n"," 'Is_lag9',\n"," 'Is_avg_window_length10',\n"," 'Is_lag10',\n"," 'Is_avg_window_length11',\n"," 'Ir_lag1',\n"," 'Ir_avg_window_length2',\n"," 'Ir_lag2',\n"," 'Ir_avg_window_length3',\n"," 'Ir_lag3',\n"," 'Ir_avg_window_length4',\n"," 'Ir_lag4',\n"," 'Ir_avg_window_length5',\n"," 'Ir_lag5',\n"," 'Ir_avg_window_length6',\n"," 'Ir_lag6',\n"," 'Ir_avg_window_length7',\n"," 'Ir_lag7',\n"," 'Ir_avg_window_length8',\n"," 'Ir_lag8',\n"," 'Ir_avg_window_length9',\n"," 'Ir_lag9',\n"," 'Ir_avg_window_length10',\n"," 'Ir_lag10',\n"," 'Ir_avg_window_length11',\n"," 'time',\n"," 'pm2.5']"]},"metadata":{},"execution_count":219}]},{"cell_type":"code","execution_count":220,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LBfSZYvjSG5B","executionInfo":{"status":"ok","timestamp":1689898943884,"user_tz":-120,"elapsed":327498,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"e844643d-cb22-4197-cc5c-da95c11c9250"},"outputs":[{"output_type":"stream","name":"stderr","text":["No path specified. Models will be saved in: \"AutogluonModels/ag-20230721_001656/\"\n","Beginning AutoGluon training ...\n","AutoGluon will save models to \"AutogluonModels/ag-20230721_001656/\"\n","AutoGluon Version:  0.8.2\n","Python Version:     3.10.6\n","Operating System:   Linux\n","Platform Machine:   x86_64\n","Platform Version:   #1 SMP Fri Jun 9 10:57:30 UTC 2023\n","Disk Space Avail:   82.82 GB / 115.66 GB (71.6%)\n","Train Data Rows:    35031\n","Train Data Columns: 141\n","Label Column: pm2.5\n","Preprocessing data ...\n","Using Feature Generators to preprocess the data ...\n","Fitting AutoMLPipelineFeatureGenerator...\n","\tAvailable Memory:                    11566.0 MB\n","\tTrain Data (Original)  Memory Usage: 39.52 MB (0.3% of available memory)\n","\tInferring data type of each feature based on column values. Set feature_metadata_in to manually specify special dtypes of the features.\n","\tStage 1 Generators:\n","\t\tFitting AsTypeFeatureGenerator...\n","\tStage 2 Generators:\n","\t\tFitting FillNaFeatureGenerator...\n","\tStage 3 Generators:\n","\t\tFitting IdentityFeatureGenerator...\n","\t\tFitting DatetimeFeatureGenerator...\n","\tStage 4 Generators:\n","\t\tFitting DropUniqueFeatureGenerator...\n","\tStage 5 Generators:\n","\t\tFitting DropDuplicatesFeatureGenerator...\n","\tTypes of features in original data (raw dtype, special dtypes):\n","\t\t('datetime', []) :   1 | ['time']\n","\t\t('float', [])    : 140 | ['pm2.5_lag1', 'pm2.5_avg_window_length2', 'pm2.5_lag2', 'pm2.5_avg_window_length3', 'pm2.5_lag3', ...]\n","\tTypes of features in processed data (raw dtype, special dtypes):\n","\t\t('float', [])                : 140 | ['pm2.5_lag1', 'pm2.5_avg_window_length2', 'pm2.5_lag2', 'pm2.5_avg_window_length3', 'pm2.5_lag3', ...]\n","\t\t('int', ['datetime_as_int']) :   5 | ['time', 'time.year', 'time.month', 'time.day', 'time.dayofweek']\n","\t1.6s = Fit runtime\n","\t141 features in original data used to generate 145 features in processed data.\n","\tTrain Data (Processed) Memory Usage: 40.64 MB (0.3% of available memory)\n","Data preprocessing and feature engineering runtime = 1.72s ...\n","AutoGluon will gauge predictive performance using evaluation metric: 'root_mean_squared_error'\n","\tThis metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.\n","\tTo change this, specify the eval_metric parameter of Predictor()\n","Automatically generating train/validation split with holdout_frac=0.07136536210784733, Train Rows: 32531, Val Rows: 2500\n","User-specified model hyperparameters to be fit:\n","{\n","\t'NN_TORCH': {},\n","\t'GBM': [{}, {'extra_trees': True, 'ag_args': {'name_suffix': 'XT'}}, 'GBMLarge'],\n","\t'CAT': {},\n","\t'XGB': {},\n","\t'AG_AUTOMM': {},\n","\t'VW': {},\n","}\n","Fitting 8 L1 models ...\n","Fitting model: LightGBM ...\n","\t-27.6287\t = Validation score   (-root_mean_squared_error)\n","\t17.9s\t = Training   runtime\n","\t0.05s\t = Validation runtime\n","Fitting model: LightGBMXT ...\n"]},{"output_type":"stream","name":"stdout","text":["[1000]\tvalid_set's rmse: 27.8043\n","[2000]\tvalid_set's rmse: 27.4434\n","[3000]\tvalid_set's rmse: 27.3272\n","[4000]\tvalid_set's rmse: 27.2621\n","[5000]\tvalid_set's rmse: 27.2512\n","[6000]\tvalid_set's rmse: 27.2394\n","[7000]\tvalid_set's rmse: 27.2318\n","[8000]\tvalid_set's rmse: 27.2185\n","[9000]\tvalid_set's rmse: 27.2241\n","[10000]\tvalid_set's rmse: 27.2064\n"]},{"output_type":"stream","name":"stderr","text":["\t-27.203\t = Validation score   (-root_mean_squared_error)\n","\t166.94s\t = Training   runtime\n","\t3.24s\t = Validation runtime\n","Fitting model: CatBoost ...\n","\t-28.898\t = Validation score   (-root_mean_squared_error)\n","\t56.43s\t = Training   runtime\n","\t0.01s\t = Validation runtime\n","Fitting model: XGBoost ...\n","\t-26.5808\t = Validation score   (-root_mean_squared_error)\n","\t22.68s\t = Training   runtime\n","\t0.1s\t = Validation runtime\n","Fitting model: NeuralNetTorch ...\n","\t-33.9163\t = Validation score   (-root_mean_squared_error)\n","\t36.83s\t = Training   runtime\n","\t0.18s\t = Validation runtime\n","Fitting model: VowpalWabbit ...\n","\tWarning: Exception caused VowpalWabbit to fail during training (ImportError)... Skipping this model.\n","\t\t`import vowpalwabbit` failed.\n","A quick tip is to install via `pip install vowpalwabbit>=9,<9.5\n","Fitting model: LightGBMLarge ...\n","\t-29.2924\t = Validation score   (-root_mean_squared_error)\n","\t16.61s\t = Training   runtime\n","\t0.03s\t = Validation runtime\n","Fitting model: MultiModalPredictor ...\n","\tWarning: Exception caused MultiModalPredictor to fail during training (ImportError)... Skipping this model.\n","\t\t`import autogluon.multimodal` failed.\n","A quick tip is to install via `pip install autogluon.multimodal==0.8.2`.\n","\n","Fitting model: WeightedEnsemble_L2 ...\n","\t-26.3096\t = Validation score   (-root_mean_squared_error)\n","\t0.27s\t = Training   runtime\n","\t0.0s\t = Validation runtime\n","AutoGluon training complete, total runtime = 327.46s ... Best model: \"WeightedEnsemble_L2\"\n","TabularPredictor saved. To load, use: predictor = TabularPredictor.load(\"AutogluonModels/ag-20230721_001656/\")\n"]}],"source":["\n","# Set the target column and feature columns\n","target_col = 'pm2.5'\n","feature_cols = df_train.loc[:, df_train.columns != 'pm2.5'].columns.tolist()\n","train_data = train_data[x]\n","# Set up the AutoML model\n","import time\n","start = time.time()\n","start\n","predictor = TabularPredictor(\n","    label=target_col,\n","    eval_metric='rmse',\n","    problem_type='regression',\n",").fit(train_data=train_data, hyperparameters='multimodal')\n","end = time.time()\n"]},{"cell_type":"code","source":["print(end-start)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"9pWzRyUEdWdT","executionInfo":{"status":"ok","timestamp":1689898943884,"user_tz":-120,"elapsed":17,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"d7c6453f-7384-4663-d37b-569d3b9abdda"},"execution_count":221,"outputs":[{"output_type":"stream","name":"stdout","text":["327.5084295272827\n"]}]},{"cell_type":"code","source":["df_test"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":834},"id":"qH4Gdb2VoqaM","executionInfo":{"status":"ok","timestamp":1689898943884,"user_tz":-120,"elapsed":12,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"3114ba4f-2288-4d57-cdac-717aa0956b55"},"execution_count":222,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     pm2.5  pm2.5_lag1  pm2.5_avg_window_length2  pm2.5_lag2  \\\n","2013-12-31 15:00:00   19.0        16.0                      18.5        21.0   \n","2013-12-31 16:00:00   16.0        21.0                      18.0        15.0   \n","2013-12-31 17:00:00   21.0        15.0                      18.5        22.0   \n","2013-12-31 18:00:00   15.0        22.0                      20.0        18.0   \n","2013-12-31 19:00:00   22.0        18.0                      20.5        23.0   \n","...                    ...         ...                       ...         ...   \n","2014-12-31 08:00:00    8.0         8.0                       7.5         7.0   \n","2014-12-31 09:00:00    8.0         7.0                       9.5        12.0   \n","2014-12-31 10:00:00    7.0        12.0                      14.5        17.0   \n","2014-12-31 11:00:00   12.0        17.0                      14.0        11.0   \n","2014-12-31 12:00:00   17.0        11.0                      10.0         9.0   \n","\n","                     pm2.5_avg_window_length3  pm2.5_lag3  \\\n","2013-12-31 15:00:00                 17.333333        15.0   \n","2013-12-31 16:00:00                 19.333333        22.0   \n","2013-12-31 17:00:00                 18.333333        18.0   \n","2013-12-31 18:00:00                 21.000000        23.0   \n","2013-12-31 19:00:00                 20.333333        20.0   \n","...                                       ...         ...   \n","2014-12-31 08:00:00                  9.000000        12.0   \n","2014-12-31 09:00:00                 12.000000        17.0   \n","2014-12-31 10:00:00                 13.333333        11.0   \n","2014-12-31 11:00:00                 12.333333         9.0   \n","2014-12-31 12:00:00                 10.333333        11.0   \n","\n","                     pm2.5_avg_window_length4  pm2.5_lag4  \\\n","2013-12-31 15:00:00                     18.50        22.0   \n","2013-12-31 16:00:00                     19.00        18.0   \n","2013-12-31 17:00:00                     19.50        23.0   \n","2013-12-31 18:00:00                     20.75        20.0   \n","2013-12-31 19:00:00                     21.00        23.0   \n","...                                       ...         ...   \n","2014-12-31 08:00:00                     11.00        17.0   \n","2014-12-31 09:00:00                     11.75        11.0   \n","2014-12-31 10:00:00                     12.25         9.0   \n","2014-12-31 11:00:00                     12.00        11.0   \n","2014-12-31 12:00:00                      9.75         8.0   \n","\n","                     pm2.5_avg_window_length5  pm2.5_lag5  ...  \\\n","2013-12-31 15:00:00                      18.4        18.0  ...   \n","2013-12-31 16:00:00                      19.8        23.0  ...   \n","2013-12-31 17:00:00                      19.6        20.0  ...   \n","2013-12-31 18:00:00                      21.2        23.0  ...   \n","2013-12-31 19:00:00                      21.6        24.0  ...   \n","...                                       ...         ...  ...   \n","2014-12-31 08:00:00                      11.0        11.0  ...   \n","2014-12-31 09:00:00                      11.2         9.0  ...   \n","2014-12-31 10:00:00                      12.0        11.0  ...   \n","2014-12-31 11:00:00                      11.2         8.0  ...   \n","2014-12-31 12:00:00                       9.6         9.0  ...   \n","\n","                     Ir_avg_window_length7  Ir_lag7  Ir_avg_window_length8  \\\n","2013-12-31 15:00:00                    0.0      0.0                    0.0   \n","2013-12-31 16:00:00                    0.0      0.0                    0.0   \n","2013-12-31 17:00:00                    0.0      0.0                    0.0   \n","2013-12-31 18:00:00                    0.0      0.0                    0.0   \n","2013-12-31 19:00:00                    0.0      0.0                    0.0   \n","...                                    ...      ...                    ...   \n","2014-12-31 08:00:00                    0.0      0.0                    0.0   \n","2014-12-31 09:00:00                    0.0      0.0                    0.0   \n","2014-12-31 10:00:00                    0.0      0.0                    0.0   \n","2014-12-31 11:00:00                    0.0      0.0                    0.0   \n","2014-12-31 12:00:00                    0.0      0.0                    0.0   \n","\n","                     Ir_lag8  Ir_avg_window_length9  Ir_lag9  \\\n","2013-12-31 15:00:00      0.0                    0.0      0.0   \n","2013-12-31 16:00:00      0.0                    0.0      0.0   \n","2013-12-31 17:00:00      0.0                    0.0      0.0   \n","2013-12-31 18:00:00      0.0                    0.0      0.0   \n","2013-12-31 19:00:00      0.0                    0.0      0.0   \n","...                      ...                    ...      ...   \n","2014-12-31 08:00:00      0.0                    0.0      0.0   \n","2014-12-31 09:00:00      0.0                    0.0      0.0   \n","2014-12-31 10:00:00      0.0                    0.0      0.0   \n","2014-12-31 11:00:00      0.0                    0.0      0.0   \n","2014-12-31 12:00:00      0.0                    0.0      0.0   \n","\n","                     Ir_avg_window_length10  Ir_lag10  Ir_avg_window_length11  \\\n","2013-12-31 15:00:00                     0.0       0.0                     0.0   \n","2013-12-31 16:00:00                     0.0       0.0                     0.0   \n","2013-12-31 17:00:00                     0.0       0.0                     0.0   \n","2013-12-31 18:00:00                     0.0       0.0                     0.0   \n","2013-12-31 19:00:00                     0.0       0.0                     0.0   \n","...                                     ...       ...                     ...   \n","2014-12-31 08:00:00                     0.0       0.0                     0.0   \n","2014-12-31 09:00:00                     0.0       0.0                     0.0   \n","2014-12-31 10:00:00                     0.0       0.0                     0.0   \n","2014-12-31 11:00:00                     0.0       0.0                     0.0   \n","2014-12-31 12:00:00                     0.0       0.0                     0.0   \n","\n","                                   time  \n","2013-12-31 15:00:00 2013-12-31 15:00:00  \n","2013-12-31 16:00:00 2013-12-31 16:00:00  \n","2013-12-31 17:00:00 2013-12-31 17:00:00  \n","2013-12-31 18:00:00 2013-12-31 18:00:00  \n","2013-12-31 19:00:00 2013-12-31 19:00:00  \n","...                                 ...  \n","2014-12-31 08:00:00 2014-12-31 08:00:00  \n","2014-12-31 09:00:00 2014-12-31 09:00:00  \n","2014-12-31 10:00:00 2014-12-31 10:00:00  \n","2014-12-31 11:00:00 2014-12-31 11:00:00  \n","2014-12-31 12:00:00 2014-12-31 12:00:00  \n","\n","[8758 rows x 142 columns]"],"text/html":["\n","\n","  <div id=\"df-b41ac709-647b-4367-b185-78123d80207a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pm2.5</th>\n","      <th>pm2.5_lag1</th>\n","      <th>pm2.5_avg_window_length2</th>\n","      <th>pm2.5_lag2</th>\n","      <th>pm2.5_avg_window_length3</th>\n","      <th>pm2.5_lag3</th>\n","      <th>pm2.5_avg_window_length4</th>\n","      <th>pm2.5_lag4</th>\n","      <th>pm2.5_avg_window_length5</th>\n","      <th>pm2.5_lag5</th>\n","      <th>...</th>\n","      <th>Ir_avg_window_length7</th>\n","      <th>Ir_lag7</th>\n","      <th>Ir_avg_window_length8</th>\n","      <th>Ir_lag8</th>\n","      <th>Ir_avg_window_length9</th>\n","      <th>Ir_lag9</th>\n","      <th>Ir_avg_window_length10</th>\n","      <th>Ir_lag10</th>\n","      <th>Ir_avg_window_length11</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2013-12-31 15:00:00</th>\n","      <td>19.0</td>\n","      <td>16.0</td>\n","      <td>18.5</td>\n","      <td>21.0</td>\n","      <td>17.333333</td>\n","      <td>15.0</td>\n","      <td>18.50</td>\n","      <td>22.0</td>\n","      <td>18.4</td>\n","      <td>18.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 15:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2013-12-31 16:00:00</th>\n","      <td>16.0</td>\n","      <td>21.0</td>\n","      <td>18.0</td>\n","      <td>15.0</td>\n","      <td>19.333333</td>\n","      <td>22.0</td>\n","      <td>19.00</td>\n","      <td>18.0</td>\n","      <td>19.8</td>\n","      <td>23.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 16:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2013-12-31 17:00:00</th>\n","      <td>21.0</td>\n","      <td>15.0</td>\n","      <td>18.5</td>\n","      <td>22.0</td>\n","      <td>18.333333</td>\n","      <td>18.0</td>\n","      <td>19.50</td>\n","      <td>23.0</td>\n","      <td>19.6</td>\n","      <td>20.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 17:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2013-12-31 18:00:00</th>\n","      <td>15.0</td>\n","      <td>22.0</td>\n","      <td>20.0</td>\n","      <td>18.0</td>\n","      <td>21.000000</td>\n","      <td>23.0</td>\n","      <td>20.75</td>\n","      <td>20.0</td>\n","      <td>21.2</td>\n","      <td>23.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 18:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2013-12-31 19:00:00</th>\n","      <td>22.0</td>\n","      <td>18.0</td>\n","      <td>20.5</td>\n","      <td>23.0</td>\n","      <td>20.333333</td>\n","      <td>20.0</td>\n","      <td>21.00</td>\n","      <td>23.0</td>\n","      <td>21.6</td>\n","      <td>24.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 19:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 08:00:00</th>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>7.5</td>\n","      <td>7.0</td>\n","      <td>9.000000</td>\n","      <td>12.0</td>\n","      <td>11.00</td>\n","      <td>17.0</td>\n","      <td>11.0</td>\n","      <td>11.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 08:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 09:00:00</th>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>9.5</td>\n","      <td>12.0</td>\n","      <td>12.000000</td>\n","      <td>17.0</td>\n","      <td>11.75</td>\n","      <td>11.0</td>\n","      <td>11.2</td>\n","      <td>9.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 09:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 10:00:00</th>\n","      <td>7.0</td>\n","      <td>12.0</td>\n","      <td>14.5</td>\n","      <td>17.0</td>\n","      <td>13.333333</td>\n","      <td>11.0</td>\n","      <td>12.25</td>\n","      <td>9.0</td>\n","      <td>12.0</td>\n","      <td>11.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 10:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 11:00:00</th>\n","      <td>12.0</td>\n","      <td>17.0</td>\n","      <td>14.0</td>\n","      <td>11.0</td>\n","      <td>12.333333</td>\n","      <td>9.0</td>\n","      <td>12.00</td>\n","      <td>11.0</td>\n","      <td>11.2</td>\n","      <td>8.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 11:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 12:00:00</th>\n","      <td>17.0</td>\n","      <td>11.0</td>\n","      <td>10.0</td>\n","      <td>9.0</td>\n","      <td>10.333333</td>\n","      <td>11.0</td>\n","      <td>9.75</td>\n","      <td>8.0</td>\n","      <td>9.6</td>\n","      <td>9.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 12:00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8758 rows × 142 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b41ac709-647b-4367-b185-78123d80207a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-1e5aeecf-c4f0-48d3-b67e-dc549ab56fc2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e5aeecf-c4f0-48d3-b67e-dc549ab56fc2')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-1e5aeecf-c4f0-48d3-b67e-dc549ab56fc2 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b41ac709-647b-4367-b185-78123d80207a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b41ac709-647b-4367-b185-78123d80207a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":222}]},{"cell_type":"code","source":["# Load test data and make predictions\n","test_data = df_test[feature_cols]\n","predictions = predictor.predict(test_data)\n"],"metadata":{"id":"IyUbIa_holb7","executionInfo":{"status":"ok","timestamp":1689898969425,"user_tz":-120,"elapsed":25552,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":223,"outputs":[]},{"cell_type":"code","source":["test_data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":834},"id":"j7-HSt3qshLg","executionInfo":{"status":"ok","timestamp":1689898969426,"user_tz":-120,"elapsed":18,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"a4bf25d5-3db1-4f50-bb1e-6e7f52aeb49b"},"execution_count":224,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     pm2.5_lag1  pm2.5_avg_window_length2  pm2.5_lag2  \\\n","2013-12-31 15:00:00        16.0                      18.5        21.0   \n","2013-12-31 16:00:00        21.0                      18.0        15.0   \n","2013-12-31 17:00:00        15.0                      18.5        22.0   \n","2013-12-31 18:00:00        22.0                      20.0        18.0   \n","2013-12-31 19:00:00        18.0                      20.5        23.0   \n","...                         ...                       ...         ...   \n","2014-12-31 08:00:00         8.0                       7.5         7.0   \n","2014-12-31 09:00:00         7.0                       9.5        12.0   \n","2014-12-31 10:00:00        12.0                      14.5        17.0   \n","2014-12-31 11:00:00        17.0                      14.0        11.0   \n","2014-12-31 12:00:00        11.0                      10.0         9.0   \n","\n","                     pm2.5_avg_window_length3  pm2.5_lag3  \\\n","2013-12-31 15:00:00                 17.333333        15.0   \n","2013-12-31 16:00:00                 19.333333        22.0   \n","2013-12-31 17:00:00                 18.333333        18.0   \n","2013-12-31 18:00:00                 21.000000        23.0   \n","2013-12-31 19:00:00                 20.333333        20.0   \n","...                                       ...         ...   \n","2014-12-31 08:00:00                  9.000000        12.0   \n","2014-12-31 09:00:00                 12.000000        17.0   \n","2014-12-31 10:00:00                 13.333333        11.0   \n","2014-12-31 11:00:00                 12.333333         9.0   \n","2014-12-31 12:00:00                 10.333333        11.0   \n","\n","                     pm2.5_avg_window_length4  pm2.5_lag4  \\\n","2013-12-31 15:00:00                     18.50        22.0   \n","2013-12-31 16:00:00                     19.00        18.0   \n","2013-12-31 17:00:00                     19.50        23.0   \n","2013-12-31 18:00:00                     20.75        20.0   \n","2013-12-31 19:00:00                     21.00        23.0   \n","...                                       ...         ...   \n","2014-12-31 08:00:00                     11.00        17.0   \n","2014-12-31 09:00:00                     11.75        11.0   \n","2014-12-31 10:00:00                     12.25         9.0   \n","2014-12-31 11:00:00                     12.00        11.0   \n","2014-12-31 12:00:00                      9.75         8.0   \n","\n","                     pm2.5_avg_window_length5  pm2.5_lag5  \\\n","2013-12-31 15:00:00                      18.4        18.0   \n","2013-12-31 16:00:00                      19.8        23.0   \n","2013-12-31 17:00:00                      19.6        20.0   \n","2013-12-31 18:00:00                      21.2        23.0   \n","2013-12-31 19:00:00                      21.6        24.0   \n","...                                       ...         ...   \n","2014-12-31 08:00:00                      11.0        11.0   \n","2014-12-31 09:00:00                      11.2         9.0   \n","2014-12-31 10:00:00                      12.0        11.0   \n","2014-12-31 11:00:00                      11.2         8.0   \n","2014-12-31 12:00:00                       9.6         9.0   \n","\n","                     pm2.5_avg_window_length6  ...  Ir_avg_window_length7  \\\n","2013-12-31 15:00:00                 19.166667  ...                    0.0   \n","2013-12-31 16:00:00                 19.833333  ...                    0.0   \n","2013-12-31 17:00:00                 20.166667  ...                    0.0   \n","2013-12-31 18:00:00                 21.666667  ...                    0.0   \n","2013-12-31 19:00:00                 26.833333  ...                    0.0   \n","...                                       ...  ...                    ...   \n","2014-12-31 08:00:00                 10.666667  ...                    0.0   \n","2014-12-31 09:00:00                 11.166667  ...                    0.0   \n","2014-12-31 10:00:00                 11.333333  ...                    0.0   \n","2014-12-31 11:00:00                 10.833333  ...                    0.0   \n","2014-12-31 12:00:00                  9.666667  ...                    0.0   \n","\n","                     Ir_lag7  Ir_avg_window_length8  Ir_lag8  \\\n","2013-12-31 15:00:00      0.0                    0.0      0.0   \n","2013-12-31 16:00:00      0.0                    0.0      0.0   \n","2013-12-31 17:00:00      0.0                    0.0      0.0   \n","2013-12-31 18:00:00      0.0                    0.0      0.0   \n","2013-12-31 19:00:00      0.0                    0.0      0.0   \n","...                      ...                    ...      ...   \n","2014-12-31 08:00:00      0.0                    0.0      0.0   \n","2014-12-31 09:00:00      0.0                    0.0      0.0   \n","2014-12-31 10:00:00      0.0                    0.0      0.0   \n","2014-12-31 11:00:00      0.0                    0.0      0.0   \n","2014-12-31 12:00:00      0.0                    0.0      0.0   \n","\n","                     Ir_avg_window_length9  Ir_lag9  Ir_avg_window_length10  \\\n","2013-12-31 15:00:00                    0.0      0.0                     0.0   \n","2013-12-31 16:00:00                    0.0      0.0                     0.0   \n","2013-12-31 17:00:00                    0.0      0.0                     0.0   \n","2013-12-31 18:00:00                    0.0      0.0                     0.0   \n","2013-12-31 19:00:00                    0.0      0.0                     0.0   \n","...                                    ...      ...                     ...   \n","2014-12-31 08:00:00                    0.0      0.0                     0.0   \n","2014-12-31 09:00:00                    0.0      0.0                     0.0   \n","2014-12-31 10:00:00                    0.0      0.0                     0.0   \n","2014-12-31 11:00:00                    0.0      0.0                     0.0   \n","2014-12-31 12:00:00                    0.0      0.0                     0.0   \n","\n","                     Ir_lag10  Ir_avg_window_length11                time  \n","2013-12-31 15:00:00       0.0                     0.0 2013-12-31 15:00:00  \n","2013-12-31 16:00:00       0.0                     0.0 2013-12-31 16:00:00  \n","2013-12-31 17:00:00       0.0                     0.0 2013-12-31 17:00:00  \n","2013-12-31 18:00:00       0.0                     0.0 2013-12-31 18:00:00  \n","2013-12-31 19:00:00       0.0                     0.0 2013-12-31 19:00:00  \n","...                       ...                     ...                 ...  \n","2014-12-31 08:00:00       0.0                     0.0 2014-12-31 08:00:00  \n","2014-12-31 09:00:00       0.0                     0.0 2014-12-31 09:00:00  \n","2014-12-31 10:00:00       0.0                     0.0 2014-12-31 10:00:00  \n","2014-12-31 11:00:00       0.0                     0.0 2014-12-31 11:00:00  \n","2014-12-31 12:00:00       0.0                     0.0 2014-12-31 12:00:00  \n","\n","[8758 rows x 141 columns]"],"text/html":["\n","\n","  <div id=\"df-1d45c101-258e-49ca-8b76-d7903f3c91e8\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pm2.5_lag1</th>\n","      <th>pm2.5_avg_window_length2</th>\n","      <th>pm2.5_lag2</th>\n","      <th>pm2.5_avg_window_length3</th>\n","      <th>pm2.5_lag3</th>\n","      <th>pm2.5_avg_window_length4</th>\n","      <th>pm2.5_lag4</th>\n","      <th>pm2.5_avg_window_length5</th>\n","      <th>pm2.5_lag5</th>\n","      <th>pm2.5_avg_window_length6</th>\n","      <th>...</th>\n","      <th>Ir_avg_window_length7</th>\n","      <th>Ir_lag7</th>\n","      <th>Ir_avg_window_length8</th>\n","      <th>Ir_lag8</th>\n","      <th>Ir_avg_window_length9</th>\n","      <th>Ir_lag9</th>\n","      <th>Ir_avg_window_length10</th>\n","      <th>Ir_lag10</th>\n","      <th>Ir_avg_window_length11</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2013-12-31 15:00:00</th>\n","      <td>16.0</td>\n","      <td>18.5</td>\n","      <td>21.0</td>\n","      <td>17.333333</td>\n","      <td>15.0</td>\n","      <td>18.50</td>\n","      <td>22.0</td>\n","      <td>18.4</td>\n","      <td>18.0</td>\n","      <td>19.166667</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 15:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2013-12-31 16:00:00</th>\n","      <td>21.0</td>\n","      <td>18.0</td>\n","      <td>15.0</td>\n","      <td>19.333333</td>\n","      <td>22.0</td>\n","      <td>19.00</td>\n","      <td>18.0</td>\n","      <td>19.8</td>\n","      <td>23.0</td>\n","      <td>19.833333</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 16:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2013-12-31 17:00:00</th>\n","      <td>15.0</td>\n","      <td>18.5</td>\n","      <td>22.0</td>\n","      <td>18.333333</td>\n","      <td>18.0</td>\n","      <td>19.50</td>\n","      <td>23.0</td>\n","      <td>19.6</td>\n","      <td>20.0</td>\n","      <td>20.166667</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 17:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2013-12-31 18:00:00</th>\n","      <td>22.0</td>\n","      <td>20.0</td>\n","      <td>18.0</td>\n","      <td>21.000000</td>\n","      <td>23.0</td>\n","      <td>20.75</td>\n","      <td>20.0</td>\n","      <td>21.2</td>\n","      <td>23.0</td>\n","      <td>21.666667</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 18:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2013-12-31 19:00:00</th>\n","      <td>18.0</td>\n","      <td>20.5</td>\n","      <td>23.0</td>\n","      <td>20.333333</td>\n","      <td>20.0</td>\n","      <td>21.00</td>\n","      <td>23.0</td>\n","      <td>21.6</td>\n","      <td>24.0</td>\n","      <td>26.833333</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2013-12-31 19:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 08:00:00</th>\n","      <td>8.0</td>\n","      <td>7.5</td>\n","      <td>7.0</td>\n","      <td>9.000000</td>\n","      <td>12.0</td>\n","      <td>11.00</td>\n","      <td>17.0</td>\n","      <td>11.0</td>\n","      <td>11.0</td>\n","      <td>10.666667</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 08:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 09:00:00</th>\n","      <td>7.0</td>\n","      <td>9.5</td>\n","      <td>12.0</td>\n","      <td>12.000000</td>\n","      <td>17.0</td>\n","      <td>11.75</td>\n","      <td>11.0</td>\n","      <td>11.2</td>\n","      <td>9.0</td>\n","      <td>11.166667</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 09:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 10:00:00</th>\n","      <td>12.0</td>\n","      <td>14.5</td>\n","      <td>17.0</td>\n","      <td>13.333333</td>\n","      <td>11.0</td>\n","      <td>12.25</td>\n","      <td>9.0</td>\n","      <td>12.0</td>\n","      <td>11.0</td>\n","      <td>11.333333</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 10:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 11:00:00</th>\n","      <td>17.0</td>\n","      <td>14.0</td>\n","      <td>11.0</td>\n","      <td>12.333333</td>\n","      <td>9.0</td>\n","      <td>12.00</td>\n","      <td>11.0</td>\n","      <td>11.2</td>\n","      <td>8.0</td>\n","      <td>10.833333</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 11:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 12:00:00</th>\n","      <td>11.0</td>\n","      <td>10.0</td>\n","      <td>9.0</td>\n","      <td>10.333333</td>\n","      <td>11.0</td>\n","      <td>9.75</td>\n","      <td>8.0</td>\n","      <td>9.6</td>\n","      <td>9.0</td>\n","      <td>9.666667</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 12:00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>8758 rows × 141 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1d45c101-258e-49ca-8b76-d7903f3c91e8')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-7d848cc4-d50a-41a3-8f5e-019880f1c34b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7d848cc4-d50a-41a3-8f5e-019880f1c34b')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-7d848cc4-d50a-41a3-8f5e-019880f1c34b button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1d45c101-258e-49ca-8b76-d7903f3c91e8 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1d45c101-258e-49ca-8b76-d7903f3c91e8');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":224}]},{"cell_type":"code","source":["s = predictor.evaluate(df_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Zv5jDUWHSSA3","executionInfo":{"status":"ok","timestamp":1689898991415,"user_tz":-120,"elapsed":22006,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"48cd3ef0-a2af-4017-d3fb-405821f61c74"},"execution_count":225,"outputs":[{"output_type":"stream","name":"stderr","text":["Evaluation: root_mean_squared_error on test data: -25.184791658579268\n","\tNote: Scores are always higher_is_better. This metric score can be multiplied by -1 to get the metric value.\n","Evaluations on test data:\n","{\n","    \"root_mean_squared_error\": -25.184791658579268,\n","    \"mean_squared_error\": -634.273730886044,\n","    \"mean_absolute_error\": -18.131252648904066,\n","    \"r2\": 0.9295251580521675,\n","    \"pearsonr\": 0.9715878974684576,\n","    \"median_absolute_error\": -15.274785995483398\n","}\n"]}]},{"cell_type":"code","source":["predictor.leaderboard(df_test, silent=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":333},"id":"LOl0Q7TxsGwP","executionInfo":{"status":"ok","timestamp":1689899004422,"user_tz":-120,"elapsed":13019,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"5542d5cf-89f3-4e67-85e3-fb64cf70ebd9"},"execution_count":226,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 model  score_test  score_val  pred_time_test  pred_time_val  \\\n","0             CatBoost  -21.889217 -28.897976        0.082914       0.010202   \n","1             LightGBM  -21.988558 -27.628723        0.111993       0.052902   \n","2        LightGBMLarge  -22.538059 -29.292397        0.132396       0.030626   \n","3           LightGBMXT  -24.865858 -27.202961       12.071508       3.236104   \n","4  WeightedEnsemble_L2  -25.184792 -26.309615       12.381317       3.334121   \n","5       NeuralNetTorch  -25.635651 -33.916299        0.316395       0.183825   \n","6              XGBoost  -26.277839 -26.580756        0.304688       0.097316   \n","\n","     fit_time  pred_time_test_marginal  pred_time_val_marginal  \\\n","0   56.425465                 0.082914                0.010202   \n","1   17.898662                 0.111993                0.052902   \n","2   16.605054                 0.132396                0.030626   \n","3  166.941481                12.071508                3.236104   \n","4  189.887010                 0.005121                0.000701   \n","5   36.831679                 0.316395                0.183825   \n","6   22.675898                 0.304688                0.097316   \n","\n","   fit_time_marginal  stack_level  can_infer  fit_order  \n","0          56.425465            1       True          3  \n","1          17.898662            1       True          1  \n","2          16.605054            1       True          6  \n","3         166.941481            1       True          2  \n","4           0.269631            2       True          7  \n","5          36.831679            1       True          5  \n","6          22.675898            1       True          4  "],"text/html":["\n","\n","  <div id=\"df-06fd2ea3-a4bc-4b72-bf09-f8e91613c900\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>score_test</th>\n","      <th>score_val</th>\n","      <th>pred_time_test</th>\n","      <th>pred_time_val</th>\n","      <th>fit_time</th>\n","      <th>pred_time_test_marginal</th>\n","      <th>pred_time_val_marginal</th>\n","      <th>fit_time_marginal</th>\n","      <th>stack_level</th>\n","      <th>can_infer</th>\n","      <th>fit_order</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>CatBoost</td>\n","      <td>-21.889217</td>\n","      <td>-28.897976</td>\n","      <td>0.082914</td>\n","      <td>0.010202</td>\n","      <td>56.425465</td>\n","      <td>0.082914</td>\n","      <td>0.010202</td>\n","      <td>56.425465</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>LightGBM</td>\n","      <td>-21.988558</td>\n","      <td>-27.628723</td>\n","      <td>0.111993</td>\n","      <td>0.052902</td>\n","      <td>17.898662</td>\n","      <td>0.111993</td>\n","      <td>0.052902</td>\n","      <td>17.898662</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>LightGBMLarge</td>\n","      <td>-22.538059</td>\n","      <td>-29.292397</td>\n","      <td>0.132396</td>\n","      <td>0.030626</td>\n","      <td>16.605054</td>\n","      <td>0.132396</td>\n","      <td>0.030626</td>\n","      <td>16.605054</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LightGBMXT</td>\n","      <td>-24.865858</td>\n","      <td>-27.202961</td>\n","      <td>12.071508</td>\n","      <td>3.236104</td>\n","      <td>166.941481</td>\n","      <td>12.071508</td>\n","      <td>3.236104</td>\n","      <td>166.941481</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>WeightedEnsemble_L2</td>\n","      <td>-25.184792</td>\n","      <td>-26.309615</td>\n","      <td>12.381317</td>\n","      <td>3.334121</td>\n","      <td>189.887010</td>\n","      <td>0.005121</td>\n","      <td>0.000701</td>\n","      <td>0.269631</td>\n","      <td>2</td>\n","      <td>True</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>NeuralNetTorch</td>\n","      <td>-25.635651</td>\n","      <td>-33.916299</td>\n","      <td>0.316395</td>\n","      <td>0.183825</td>\n","      <td>36.831679</td>\n","      <td>0.316395</td>\n","      <td>0.183825</td>\n","      <td>36.831679</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>XGBoost</td>\n","      <td>-26.277839</td>\n","      <td>-26.580756</td>\n","      <td>0.304688</td>\n","      <td>0.097316</td>\n","      <td>22.675898</td>\n","      <td>0.304688</td>\n","      <td>0.097316</td>\n","      <td>22.675898</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>4</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-06fd2ea3-a4bc-4b72-bf09-f8e91613c900')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-d25c345d-f9b7-4364-96ca-d8126b800a69\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d25c345d-f9b7-4364-96ca-d8126b800a69')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-d25c345d-f9b7-4364-96ca-d8126b800a69 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-06fd2ea3-a4bc-4b72-bf09-f8e91613c900 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-06fd2ea3-a4bc-4b72-bf09-f8e91613c900');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":226}]},{"cell_type":"code","source":["x = predictor.leaderboard(df_test, silent=True)\n","type(x)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MIdIg5C4sK_s","executionInfo":{"status":"ok","timestamp":1689899017590,"user_tz":-120,"elapsed":13170,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"f7c0c540-4113-45a9-d773-b5d8fd840e52"},"execution_count":227,"outputs":[{"output_type":"execute_result","data":{"text/plain":["pandas.core.frame.DataFrame"]},"metadata":{},"execution_count":227}]},{"cell_type":"code","source":["# x.to_csv('/content/drive/MyDrive/AutoML/AutoML_AutoGluon/preprocess_leaderboard.csv')"],"metadata":{"id":"xYYAV5NVuLss","executionInfo":{"status":"ok","timestamp":1689899017590,"user_tz":-120,"elapsed":18,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":228,"outputs":[]},{"cell_type":"code","source":["df_processed"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":834},"id":"9D2YRzPXbzIO","executionInfo":{"status":"ok","timestamp":1689899017591,"user_tz":-120,"elapsed":19,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"03e90f18-56a0-4d98-dd94-8809fca92ab1"},"execution_count":229,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     pm2.5  pm2.5_lag1  pm2.5_avg_window_length2  pm2.5_lag2  \\\n","2010-01-02 00:00:00  129.0       148.0                     153.5       159.0   \n","2010-01-02 01:00:00  148.0       159.0                     170.0       181.0   \n","2010-01-02 02:00:00  159.0       181.0                     159.5       138.0   \n","2010-01-02 03:00:00  181.0       138.0                     123.5       109.0   \n","2010-01-02 04:00:00  138.0       109.0                     107.0       105.0   \n","...                    ...         ...                       ...         ...   \n","2014-12-31 08:00:00    8.0         8.0                       7.5         7.0   \n","2014-12-31 09:00:00    8.0         7.0                       9.5        12.0   \n","2014-12-31 10:00:00    7.0        12.0                      14.5        17.0   \n","2014-12-31 11:00:00   12.0        17.0                      14.0        11.0   \n","2014-12-31 12:00:00   17.0        11.0                      10.0         9.0   \n","\n","                     pm2.5_avg_window_length3  pm2.5_lag3  \\\n","2010-01-02 00:00:00                162.666667       181.0   \n","2010-01-02 01:00:00                159.333333       138.0   \n","2010-01-02 02:00:00                142.666667       109.0   \n","2010-01-02 03:00:00                117.333333       105.0   \n","2010-01-02 04:00:00                112.666667       124.0   \n","...                                       ...         ...   \n","2014-12-31 08:00:00                  9.000000        12.0   \n","2014-12-31 09:00:00                 12.000000        17.0   \n","2014-12-31 10:00:00                 13.333333        11.0   \n","2014-12-31 11:00:00                 12.333333         9.0   \n","2014-12-31 12:00:00                 10.333333        11.0   \n","\n","                     pm2.5_avg_window_length4  pm2.5_lag4  \\\n","2010-01-02 00:00:00                    156.50       138.0   \n","2010-01-02 01:00:00                    146.75       109.0   \n","2010-01-02 02:00:00                    133.25       105.0   \n","2010-01-02 03:00:00                    119.00       124.0   \n","2010-01-02 04:00:00                    114.50       120.0   \n","...                                       ...         ...   \n","2014-12-31 08:00:00                     11.00        17.0   \n","2014-12-31 09:00:00                     11.75        11.0   \n","2014-12-31 10:00:00                     12.25         9.0   \n","2014-12-31 11:00:00                     12.00        11.0   \n","2014-12-31 12:00:00                      9.75         8.0   \n","\n","                     pm2.5_avg_window_length5  pm2.5_lag5  ...  \\\n","2010-01-02 00:00:00                     147.0       109.0  ...   \n","2010-01-02 01:00:00                     138.4       105.0  ...   \n","2010-01-02 02:00:00                     131.4       124.0  ...   \n","2010-01-02 03:00:00                     119.2       120.0  ...   \n","2010-01-02 04:00:00                     118.0       132.0  ...   \n","...                                       ...         ...  ...   \n","2014-12-31 08:00:00                      11.0        11.0  ...   \n","2014-12-31 09:00:00                      11.2         9.0  ...   \n","2014-12-31 10:00:00                      12.0        11.0  ...   \n","2014-12-31 11:00:00                      11.2         8.0  ...   \n","2014-12-31 12:00:00                       9.6         9.0  ...   \n","\n","                     Ir_avg_window_length7  Ir_lag7  Ir_avg_window_length8  \\\n","2010-01-02 00:00:00                    0.0      0.0                    0.0   \n","2010-01-02 01:00:00                    0.0      0.0                    0.0   \n","2010-01-02 02:00:00                    0.0      0.0                    0.0   \n","2010-01-02 03:00:00                    0.0      0.0                    0.0   \n","2010-01-02 04:00:00                    0.0      0.0                    0.0   \n","...                                    ...      ...                    ...   \n","2014-12-31 08:00:00                    0.0      0.0                    0.0   \n","2014-12-31 09:00:00                    0.0      0.0                    0.0   \n","2014-12-31 10:00:00                    0.0      0.0                    0.0   \n","2014-12-31 11:00:00                    0.0      0.0                    0.0   \n","2014-12-31 12:00:00                    0.0      0.0                    0.0   \n","\n","                     Ir_lag8  Ir_avg_window_length9  Ir_lag9  \\\n","2010-01-02 00:00:00      0.0                    0.0      0.0   \n","2010-01-02 01:00:00      0.0                    0.0      0.0   \n","2010-01-02 02:00:00      0.0                    0.0      0.0   \n","2010-01-02 03:00:00      0.0                    0.0      0.0   \n","2010-01-02 04:00:00      0.0                    0.0      0.0   \n","...                      ...                    ...      ...   \n","2014-12-31 08:00:00      0.0                    0.0      0.0   \n","2014-12-31 09:00:00      0.0                    0.0      0.0   \n","2014-12-31 10:00:00      0.0                    0.0      0.0   \n","2014-12-31 11:00:00      0.0                    0.0      0.0   \n","2014-12-31 12:00:00      0.0                    0.0      0.0   \n","\n","                     Ir_avg_window_length10  Ir_lag10  Ir_avg_window_length11  \\\n","2010-01-02 00:00:00                     0.0       0.0                     0.0   \n","2010-01-02 01:00:00                     0.0       0.0                     0.0   \n","2010-01-02 02:00:00                     0.0       0.0                     0.0   \n","2010-01-02 03:00:00                     0.0       0.0                     0.0   \n","2010-01-02 04:00:00                     0.0       0.0                     0.0   \n","...                                     ...       ...                     ...   \n","2014-12-31 08:00:00                     0.0       0.0                     0.0   \n","2014-12-31 09:00:00                     0.0       0.0                     0.0   \n","2014-12-31 10:00:00                     0.0       0.0                     0.0   \n","2014-12-31 11:00:00                     0.0       0.0                     0.0   \n","2014-12-31 12:00:00                     0.0       0.0                     0.0   \n","\n","                                   time  \n","2010-01-02 00:00:00 2010-01-02 00:00:00  \n","2010-01-02 01:00:00 2010-01-02 01:00:00  \n","2010-01-02 02:00:00 2010-01-02 02:00:00  \n","2010-01-02 03:00:00 2010-01-02 03:00:00  \n","2010-01-02 04:00:00 2010-01-02 04:00:00  \n","...                                 ...  \n","2014-12-31 08:00:00 2014-12-31 08:00:00  \n","2014-12-31 09:00:00 2014-12-31 09:00:00  \n","2014-12-31 10:00:00 2014-12-31 10:00:00  \n","2014-12-31 11:00:00 2014-12-31 11:00:00  \n","2014-12-31 12:00:00 2014-12-31 12:00:00  \n","\n","[43789 rows x 142 columns]"],"text/html":["\n","\n","  <div id=\"df-14107edf-31ee-41dc-b25d-cbe444379550\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pm2.5</th>\n","      <th>pm2.5_lag1</th>\n","      <th>pm2.5_avg_window_length2</th>\n","      <th>pm2.5_lag2</th>\n","      <th>pm2.5_avg_window_length3</th>\n","      <th>pm2.5_lag3</th>\n","      <th>pm2.5_avg_window_length4</th>\n","      <th>pm2.5_lag4</th>\n","      <th>pm2.5_avg_window_length5</th>\n","      <th>pm2.5_lag5</th>\n","      <th>...</th>\n","      <th>Ir_avg_window_length7</th>\n","      <th>Ir_lag7</th>\n","      <th>Ir_avg_window_length8</th>\n","      <th>Ir_lag8</th>\n","      <th>Ir_avg_window_length9</th>\n","      <th>Ir_lag9</th>\n","      <th>Ir_avg_window_length10</th>\n","      <th>Ir_lag10</th>\n","      <th>Ir_avg_window_length11</th>\n","      <th>time</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-01-02 00:00:00</th>\n","      <td>129.0</td>\n","      <td>148.0</td>\n","      <td>153.5</td>\n","      <td>159.0</td>\n","      <td>162.666667</td>\n","      <td>181.0</td>\n","      <td>156.50</td>\n","      <td>138.0</td>\n","      <td>147.0</td>\n","      <td>109.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2010-01-02 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-02 01:00:00</th>\n","      <td>148.0</td>\n","      <td>159.0</td>\n","      <td>170.0</td>\n","      <td>181.0</td>\n","      <td>159.333333</td>\n","      <td>138.0</td>\n","      <td>146.75</td>\n","      <td>109.0</td>\n","      <td>138.4</td>\n","      <td>105.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2010-01-02 01:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-02 02:00:00</th>\n","      <td>159.0</td>\n","      <td>181.0</td>\n","      <td>159.5</td>\n","      <td>138.0</td>\n","      <td>142.666667</td>\n","      <td>109.0</td>\n","      <td>133.25</td>\n","      <td>105.0</td>\n","      <td>131.4</td>\n","      <td>124.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2010-01-02 02:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-02 03:00:00</th>\n","      <td>181.0</td>\n","      <td>138.0</td>\n","      <td>123.5</td>\n","      <td>109.0</td>\n","      <td>117.333333</td>\n","      <td>105.0</td>\n","      <td>119.00</td>\n","      <td>124.0</td>\n","      <td>119.2</td>\n","      <td>120.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2010-01-02 03:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-02 04:00:00</th>\n","      <td>138.0</td>\n","      <td>109.0</td>\n","      <td>107.0</td>\n","      <td>105.0</td>\n","      <td>112.666667</td>\n","      <td>124.0</td>\n","      <td>114.50</td>\n","      <td>120.0</td>\n","      <td>118.0</td>\n","      <td>132.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2010-01-02 04:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 08:00:00</th>\n","      <td>8.0</td>\n","      <td>8.0</td>\n","      <td>7.5</td>\n","      <td>7.0</td>\n","      <td>9.000000</td>\n","      <td>12.0</td>\n","      <td>11.00</td>\n","      <td>17.0</td>\n","      <td>11.0</td>\n","      <td>11.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 08:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 09:00:00</th>\n","      <td>8.0</td>\n","      <td>7.0</td>\n","      <td>9.5</td>\n","      <td>12.0</td>\n","      <td>12.000000</td>\n","      <td>17.0</td>\n","      <td>11.75</td>\n","      <td>11.0</td>\n","      <td>11.2</td>\n","      <td>9.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 09:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 10:00:00</th>\n","      <td>7.0</td>\n","      <td>12.0</td>\n","      <td>14.5</td>\n","      <td>17.0</td>\n","      <td>13.333333</td>\n","      <td>11.0</td>\n","      <td>12.25</td>\n","      <td>9.0</td>\n","      <td>12.0</td>\n","      <td>11.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 10:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 11:00:00</th>\n","      <td>12.0</td>\n","      <td>17.0</td>\n","      <td>14.0</td>\n","      <td>11.0</td>\n","      <td>12.333333</td>\n","      <td>9.0</td>\n","      <td>12.00</td>\n","      <td>11.0</td>\n","      <td>11.2</td>\n","      <td>8.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 11:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 12:00:00</th>\n","      <td>17.0</td>\n","      <td>11.0</td>\n","      <td>10.0</td>\n","      <td>9.0</td>\n","      <td>10.333333</td>\n","      <td>11.0</td>\n","      <td>9.75</td>\n","      <td>8.0</td>\n","      <td>9.6</td>\n","      <td>9.0</td>\n","      <td>...</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>2014-12-31 12:00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43789 rows × 142 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14107edf-31ee-41dc-b25d-cbe444379550')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-9160cdbb-193f-4a04-aa8a-b160b11158cb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9160cdbb-193f-4a04-aa8a-b160b11158cb')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-9160cdbb-193f-4a04-aa8a-b160b11158cb button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-14107edf-31ee-41dc-b25d-cbe444379550 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-14107edf-31ee-41dc-b25d-cbe444379550');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":229}]},{"cell_type":"code","source":["predictor.leaderboard(df_processed, silent = True)"],"metadata":{"id":"BFnEtnzJu5_i","executionInfo":{"status":"ok","timestamp":1689899087277,"user_tz":-120,"elapsed":69704,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"colab":{"base_uri":"https://localhost:8080/","height":333},"outputId":"b48a22b9-31ad-4f92-9455-8ea11c503c66"},"execution_count":230,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                 model  score_test  score_val  pred_time_test  pred_time_val  \\\n","0           LightGBMXT  -13.834759 -27.202961       66.469420       3.236104   \n","1  WeightedEnsemble_L2  -15.931080 -26.309615       67.539311       3.334121   \n","2              XGBoost  -18.024325 -26.580756        1.065897       0.097316   \n","3        LightGBMLarge  -19.205884 -29.292397        0.479178       0.030626   \n","4             CatBoost  -20.029160 -28.897976        0.118529       0.010202   \n","5             LightGBM  -20.091837 -27.628723        0.555195       0.052902   \n","6       NeuralNetTorch  -28.445318 -33.916299        0.828253       0.183825   \n","\n","     fit_time  pred_time_test_marginal  pred_time_val_marginal  \\\n","0  166.941481                66.469420                3.236104   \n","1  189.887010                 0.003993                0.000701   \n","2   22.675898                 1.065897                0.097316   \n","3   16.605054                 0.479178                0.030626   \n","4   56.425465                 0.118529                0.010202   \n","5   17.898662                 0.555195                0.052902   \n","6   36.831679                 0.828253                0.183825   \n","\n","   fit_time_marginal  stack_level  can_infer  fit_order  \n","0         166.941481            1       True          2  \n","1           0.269631            2       True          7  \n","2          22.675898            1       True          4  \n","3          16.605054            1       True          6  \n","4          56.425465            1       True          3  \n","5          17.898662            1       True          1  \n","6          36.831679            1       True          5  "],"text/html":["\n","\n","  <div id=\"df-3b2d95bf-551f-41bc-b63f-73d486281b73\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>model</th>\n","      <th>score_test</th>\n","      <th>score_val</th>\n","      <th>pred_time_test</th>\n","      <th>pred_time_val</th>\n","      <th>fit_time</th>\n","      <th>pred_time_test_marginal</th>\n","      <th>pred_time_val_marginal</th>\n","      <th>fit_time_marginal</th>\n","      <th>stack_level</th>\n","      <th>can_infer</th>\n","      <th>fit_order</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>LightGBMXT</td>\n","      <td>-13.834759</td>\n","      <td>-27.202961</td>\n","      <td>66.469420</td>\n","      <td>3.236104</td>\n","      <td>166.941481</td>\n","      <td>66.469420</td>\n","      <td>3.236104</td>\n","      <td>166.941481</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>WeightedEnsemble_L2</td>\n","      <td>-15.931080</td>\n","      <td>-26.309615</td>\n","      <td>67.539311</td>\n","      <td>3.334121</td>\n","      <td>189.887010</td>\n","      <td>0.003993</td>\n","      <td>0.000701</td>\n","      <td>0.269631</td>\n","      <td>2</td>\n","      <td>True</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>XGBoost</td>\n","      <td>-18.024325</td>\n","      <td>-26.580756</td>\n","      <td>1.065897</td>\n","      <td>0.097316</td>\n","      <td>22.675898</td>\n","      <td>1.065897</td>\n","      <td>0.097316</td>\n","      <td>22.675898</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>LightGBMLarge</td>\n","      <td>-19.205884</td>\n","      <td>-29.292397</td>\n","      <td>0.479178</td>\n","      <td>0.030626</td>\n","      <td>16.605054</td>\n","      <td>0.479178</td>\n","      <td>0.030626</td>\n","      <td>16.605054</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>CatBoost</td>\n","      <td>-20.029160</td>\n","      <td>-28.897976</td>\n","      <td>0.118529</td>\n","      <td>0.010202</td>\n","      <td>56.425465</td>\n","      <td>0.118529</td>\n","      <td>0.010202</td>\n","      <td>56.425465</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>LightGBM</td>\n","      <td>-20.091837</td>\n","      <td>-27.628723</td>\n","      <td>0.555195</td>\n","      <td>0.052902</td>\n","      <td>17.898662</td>\n","      <td>0.555195</td>\n","      <td>0.052902</td>\n","      <td>17.898662</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>NeuralNetTorch</td>\n","      <td>-28.445318</td>\n","      <td>-33.916299</td>\n","      <td>0.828253</td>\n","      <td>0.183825</td>\n","      <td>36.831679</td>\n","      <td>0.828253</td>\n","      <td>0.183825</td>\n","      <td>36.831679</td>\n","      <td>1</td>\n","      <td>True</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b2d95bf-551f-41bc-b63f-73d486281b73')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-9954aeb9-0830-4a70-b761-89a0f1b0c985\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9954aeb9-0830-4a70-b761-89a0f1b0c985')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-9954aeb9-0830-4a70-b761-89a0f1b0c985 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3b2d95bf-551f-41bc-b63f-73d486281b73 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3b2d95bf-551f-41bc-b63f-73d486281b73');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":230}]},{"cell_type":"code","source":["# predictor.leaderboard(df_train, silent = True)"],"metadata":{"id":"whvch7cbL-WN","executionInfo":{"status":"ok","timestamp":1689899087277,"user_tz":-120,"elapsed":3,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":231,"outputs":[]},{"cell_type":"code","source":["predictor.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"M1eORAt1cqbe","executionInfo":{"status":"ok","timestamp":1689899091175,"user_tz":-120,"elapsed":3901,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"09828028-9d4a-4a43-ab38-fc5969813623"},"execution_count":232,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'path': 'AutogluonModels/ag-20230721_001656/',\n"," 'label': 'pm2.5',\n"," 'random_state': 0,\n"," 'version': '0.8.2',\n"," 'features': ['pm2.5_lag1',\n","  'pm2.5_avg_window_length2',\n","  'pm2.5_lag2',\n","  'pm2.5_avg_window_length3',\n","  'pm2.5_lag3',\n","  'pm2.5_avg_window_length4',\n","  'pm2.5_lag4',\n","  'pm2.5_avg_window_length5',\n","  'pm2.5_lag5',\n","  'pm2.5_avg_window_length6',\n","  'pm2.5_lag6',\n","  'pm2.5_avg_window_length7',\n","  'pm2.5_lag7',\n","  'pm2.5_avg_window_length8',\n","  'pm2.5_lag8',\n","  'pm2.5_avg_window_length9',\n","  'pm2.5_lag9',\n","  'pm2.5_avg_window_length10',\n","  'pm2.5_lag10',\n","  'pm2.5_avg_window_length11',\n","  'DEWP_lag1',\n","  'DEWP_avg_window_length2',\n","  'DEWP_lag2',\n","  'DEWP_avg_window_length3',\n","  'DEWP_lag3',\n","  'DEWP_avg_window_length4',\n","  'DEWP_lag4',\n","  'DEWP_avg_window_length5',\n","  'DEWP_lag5',\n","  'DEWP_avg_window_length6',\n","  'DEWP_lag6',\n","  'DEWP_avg_window_length7',\n","  'DEWP_lag7',\n","  'DEWP_avg_window_length8',\n","  'DEWP_lag8',\n","  'DEWP_avg_window_length9',\n","  'DEWP_lag9',\n","  'DEWP_avg_window_length10',\n","  'DEWP_lag10',\n","  'DEWP_avg_window_length11',\n","  'TEMP_lag1',\n","  'TEMP_avg_window_length2',\n","  'TEMP_lag2',\n","  'TEMP_avg_window_length3',\n","  'TEMP_lag3',\n","  'TEMP_avg_window_length4',\n","  'TEMP_lag4',\n","  'TEMP_avg_window_length5',\n","  'TEMP_lag5',\n","  'TEMP_avg_window_length6',\n","  'TEMP_lag6',\n","  'TEMP_avg_window_length7',\n","  'TEMP_lag7',\n","  'TEMP_avg_window_length8',\n","  'TEMP_lag8',\n","  'TEMP_avg_window_length9',\n","  'TEMP_lag9',\n","  'TEMP_avg_window_length10',\n","  'TEMP_lag10',\n","  'TEMP_avg_window_length11',\n","  'PRES_lag1',\n","  'PRES_avg_window_length2',\n","  'PRES_lag2',\n","  'PRES_avg_window_length3',\n","  'PRES_lag3',\n","  'PRES_avg_window_length4',\n","  'PRES_lag4',\n","  'PRES_avg_window_length5',\n","  'PRES_lag5',\n","  'PRES_avg_window_length6',\n","  'PRES_lag6',\n","  'PRES_avg_window_length7',\n","  'PRES_lag7',\n","  'PRES_avg_window_length8',\n","  'PRES_lag8',\n","  'PRES_avg_window_length9',\n","  'PRES_lag9',\n","  'PRES_avg_window_length10',\n","  'PRES_lag10',\n","  'PRES_avg_window_length11',\n","  'Iws_lag1',\n","  'Iws_avg_window_length2',\n","  'Iws_lag2',\n","  'Iws_avg_window_length3',\n","  'Iws_lag3',\n","  'Iws_avg_window_length4',\n","  'Iws_lag4',\n","  'Iws_avg_window_length5',\n","  'Iws_lag5',\n","  'Iws_avg_window_length6',\n","  'Iws_lag6',\n","  'Iws_avg_window_length7',\n","  'Iws_lag7',\n","  'Iws_avg_window_length8',\n","  'Iws_lag8',\n","  'Iws_avg_window_length9',\n","  'Iws_lag9',\n","  'Iws_avg_window_length10',\n","  'Iws_lag10',\n","  'Iws_avg_window_length11',\n","  'Is_lag1',\n","  'Is_avg_window_length2',\n","  'Is_lag2',\n","  'Is_avg_window_length3',\n","  'Is_lag3',\n","  'Is_avg_window_length4',\n","  'Is_lag4',\n","  'Is_avg_window_length5',\n","  'Is_lag5',\n","  'Is_avg_window_length6',\n","  'Is_lag6',\n","  'Is_avg_window_length7',\n","  'Is_lag7',\n","  'Is_avg_window_length8',\n","  'Is_lag8',\n","  'Is_avg_window_length9',\n","  'Is_lag9',\n","  'Is_avg_window_length10',\n","  'Is_lag10',\n","  'Is_avg_window_length11',\n","  'Ir_lag1',\n","  'Ir_avg_window_length2',\n","  'Ir_lag2',\n","  'Ir_avg_window_length3',\n","  'Ir_lag3',\n","  'Ir_avg_window_length4',\n","  'Ir_lag4',\n","  'Ir_avg_window_length5',\n","  'Ir_lag5',\n","  'Ir_avg_window_length6',\n","  'Ir_lag6',\n","  'Ir_avg_window_length7',\n","  'Ir_lag7',\n","  'Ir_avg_window_length8',\n","  'Ir_lag8',\n","  'Ir_avg_window_length9',\n","  'Ir_lag9',\n","  'Ir_avg_window_length10',\n","  'Ir_lag10',\n","  'Ir_avg_window_length11',\n","  'time'],\n"," 'feature_metadata_in': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a23ef4811e0>,\n"," 'time_fit_preprocessing': 1.7210502624511719,\n"," 'time_fit_training': 325.7358455657959,\n"," 'time_fit_total': 327.45689582824707,\n"," 'time_limit': None,\n"," 'time_train_start': 1689898618.5032742,\n"," 'num_rows_train': 32531,\n"," 'num_cols_train': 145,\n"," 'num_rows_val': 2500,\n"," 'num_classes': None,\n"," 'problem_type': 'regression',\n"," 'eval_metric': 'root_mean_squared_error',\n"," 'best_model': 'WeightedEnsemble_L2',\n"," 'best_model_score_val': -26.3096153860877,\n"," 'best_model_stack_level': 2,\n"," 'num_models_trained': 7,\n"," 'num_bag_folds': 0,\n"," 'max_stack_level': 2,\n"," 'max_core_stack_level': 1,\n"," 'model_info': {'LightGBM': {'name': 'LightGBM',\n","   'model_type': 'LGBModel',\n","   'problem_type': 'regression',\n","   'eval_metric': 'root_mean_squared_error',\n","   'stopping_metric': 'root_mean_squared_error',\n","   'fit_time': 17.898662328720093,\n","   'num_classes': None,\n","   'quantile_levels': None,\n","   'predict_time': 0.0529017448425293,\n","   'val_score': -27.628722907428987,\n","   'hyperparameters': {'learning_rate': 0.05},\n","   'hyperparameters_fit': {'num_boost_round': 165},\n","   'hyperparameters_nondefault': [],\n","   'ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","    'max_time_limit_ratio': 1.0,\n","    'max_time_limit': None,\n","    'min_time_limit': 0,\n","    'valid_raw_types': ['bool', 'int', 'float', 'category'],\n","    'valid_special_types': None,\n","    'ignored_type_group_special': None,\n","    'ignored_type_group_raw': None,\n","    'get_features_kwargs': None,\n","    'get_features_kwargs_extra': None,\n","    'predict_1_batch_size': None,\n","    'temperature_scalar': None},\n","   'num_features': 145,\n","   'features': ['pm2.5_lag1',\n","    'pm2.5_avg_window_length2',\n","    'pm2.5_lag2',\n","    'pm2.5_avg_window_length3',\n","    'pm2.5_lag3',\n","    'pm2.5_avg_window_length4',\n","    'pm2.5_lag4',\n","    'pm2.5_avg_window_length5',\n","    'pm2.5_lag5',\n","    'pm2.5_avg_window_length6',\n","    'pm2.5_lag6',\n","    'pm2.5_avg_window_length7',\n","    'pm2.5_lag7',\n","    'pm2.5_avg_window_length8',\n","    'pm2.5_lag8',\n","    'pm2.5_avg_window_length9',\n","    'pm2.5_lag9',\n","    'pm2.5_avg_window_length10',\n","    'pm2.5_lag10',\n","    'pm2.5_avg_window_length11',\n","    'DEWP_lag1',\n","    'DEWP_avg_window_length2',\n","    'DEWP_lag2',\n","    'DEWP_avg_window_length3',\n","    'DEWP_lag3',\n","    'DEWP_avg_window_length4',\n","    'DEWP_lag4',\n","    'DEWP_avg_window_length5',\n","    'DEWP_lag5',\n","    'DEWP_avg_window_length6',\n","    'DEWP_lag6',\n","    'DEWP_avg_window_length7',\n","    'DEWP_lag7',\n","    'DEWP_avg_window_length8',\n","    'DEWP_lag8',\n","    'DEWP_avg_window_length9',\n","    'DEWP_lag9',\n","    'DEWP_avg_window_length10',\n","    'DEWP_lag10',\n","    'DEWP_avg_window_length11',\n","    'TEMP_lag1',\n","    'TEMP_avg_window_length2',\n","    'TEMP_lag2',\n","    'TEMP_avg_window_length3',\n","    'TEMP_lag3',\n","    'TEMP_avg_window_length4',\n","    'TEMP_lag4',\n","    'TEMP_avg_window_length5',\n","    'TEMP_lag5',\n","    'TEMP_avg_window_length6',\n","    'TEMP_lag6',\n","    'TEMP_avg_window_length7',\n","    'TEMP_lag7',\n","    'TEMP_avg_window_length8',\n","    'TEMP_lag8',\n","    'TEMP_avg_window_length9',\n","    'TEMP_lag9',\n","    'TEMP_avg_window_length10',\n","    'TEMP_lag10',\n","    'TEMP_avg_window_length11',\n","    'PRES_lag1',\n","    'PRES_avg_window_length2',\n","    'PRES_lag2',\n","    'PRES_avg_window_length3',\n","    'PRES_lag3',\n","    'PRES_avg_window_length4',\n","    'PRES_lag4',\n","    'PRES_avg_window_length5',\n","    'PRES_lag5',\n","    'PRES_avg_window_length6',\n","    'PRES_lag6',\n","    'PRES_avg_window_length7',\n","    'PRES_lag7',\n","    'PRES_avg_window_length8',\n","    'PRES_lag8',\n","    'PRES_avg_window_length9',\n","    'PRES_lag9',\n","    'PRES_avg_window_length10',\n","    'PRES_lag10',\n","    'PRES_avg_window_length11',\n","    'Iws_lag1',\n","    'Iws_avg_window_length2',\n","    'Iws_lag2',\n","    'Iws_avg_window_length3',\n","    'Iws_lag3',\n","    'Iws_avg_window_length4',\n","    'Iws_lag4',\n","    'Iws_avg_window_length5',\n","    'Iws_lag5',\n","    'Iws_avg_window_length6',\n","    'Iws_lag6',\n","    'Iws_avg_window_length7',\n","    'Iws_lag7',\n","    'Iws_avg_window_length8',\n","    'Iws_lag8',\n","    'Iws_avg_window_length9',\n","    'Iws_lag9',\n","    'Iws_avg_window_length10',\n","    'Iws_lag10',\n","    'Iws_avg_window_length11',\n","    'Is_lag1',\n","    'Is_avg_window_length2',\n","    'Is_lag2',\n","    'Is_avg_window_length3',\n","    'Is_lag3',\n","    'Is_avg_window_length4',\n","    'Is_lag4',\n","    'Is_avg_window_length5',\n","    'Is_lag5',\n","    'Is_avg_window_length6',\n","    'Is_lag6',\n","    'Is_avg_window_length7',\n","    'Is_lag7',\n","    'Is_avg_window_length8',\n","    'Is_lag8',\n","    'Is_avg_window_length9',\n","    'Is_lag9',\n","    'Is_avg_window_length10',\n","    'Is_lag10',\n","    'Is_avg_window_length11',\n","    'Ir_lag1',\n","    'Ir_avg_window_length2',\n","    'Ir_lag2',\n","    'Ir_avg_window_length3',\n","    'Ir_lag3',\n","    'Ir_avg_window_length4',\n","    'Ir_lag4',\n","    'Ir_avg_window_length5',\n","    'Ir_lag5',\n","    'Ir_avg_window_length6',\n","    'Ir_lag6',\n","    'Ir_avg_window_length7',\n","    'Ir_lag7',\n","    'Ir_avg_window_length8',\n","    'Ir_lag8',\n","    'Ir_avg_window_length9',\n","    'Ir_lag9',\n","    'Ir_avg_window_length10',\n","    'Ir_lag10',\n","    'Ir_avg_window_length11',\n","    'time',\n","    'time.year',\n","    'time.month',\n","    'time.day',\n","    'time.dayofweek'],\n","   'feature_metadata': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a23ef265360>,\n","   'memory_size': 471590,\n","   'compile_time': None},\n","  'LightGBMXT': {'name': 'LightGBMXT',\n","   'model_type': 'LGBModel',\n","   'problem_type': 'regression',\n","   'eval_metric': 'root_mean_squared_error',\n","   'stopping_metric': 'root_mean_squared_error',\n","   'fit_time': 166.94148135185242,\n","   'num_classes': None,\n","   'quantile_levels': None,\n","   'predict_time': 3.2361044883728027,\n","   'val_score': -27.202961093869042,\n","   'hyperparameters': {'learning_rate': 0.05, 'extra_trees': True},\n","   'hyperparameters_fit': {'num_boost_round': 9947},\n","   'hyperparameters_nondefault': ['extra_trees'],\n","   'ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","    'max_time_limit_ratio': 1.0,\n","    'max_time_limit': None,\n","    'min_time_limit': 0,\n","    'valid_raw_types': ['bool', 'int', 'float', 'category'],\n","    'valid_special_types': None,\n","    'ignored_type_group_special': None,\n","    'ignored_type_group_raw': None,\n","    'get_features_kwargs': None,\n","    'get_features_kwargs_extra': None,\n","    'predict_1_batch_size': None,\n","    'temperature_scalar': None},\n","   'num_features': 145,\n","   'features': ['pm2.5_lag1',\n","    'pm2.5_avg_window_length2',\n","    'pm2.5_lag2',\n","    'pm2.5_avg_window_length3',\n","    'pm2.5_lag3',\n","    'pm2.5_avg_window_length4',\n","    'pm2.5_lag4',\n","    'pm2.5_avg_window_length5',\n","    'pm2.5_lag5',\n","    'pm2.5_avg_window_length6',\n","    'pm2.5_lag6',\n","    'pm2.5_avg_window_length7',\n","    'pm2.5_lag7',\n","    'pm2.5_avg_window_length8',\n","    'pm2.5_lag8',\n","    'pm2.5_avg_window_length9',\n","    'pm2.5_lag9',\n","    'pm2.5_avg_window_length10',\n","    'pm2.5_lag10',\n","    'pm2.5_avg_window_length11',\n","    'DEWP_lag1',\n","    'DEWP_avg_window_length2',\n","    'DEWP_lag2',\n","    'DEWP_avg_window_length3',\n","    'DEWP_lag3',\n","    'DEWP_avg_window_length4',\n","    'DEWP_lag4',\n","    'DEWP_avg_window_length5',\n","    'DEWP_lag5',\n","    'DEWP_avg_window_length6',\n","    'DEWP_lag6',\n","    'DEWP_avg_window_length7',\n","    'DEWP_lag7',\n","    'DEWP_avg_window_length8',\n","    'DEWP_lag8',\n","    'DEWP_avg_window_length9',\n","    'DEWP_lag9',\n","    'DEWP_avg_window_length10',\n","    'DEWP_lag10',\n","    'DEWP_avg_window_length11',\n","    'TEMP_lag1',\n","    'TEMP_avg_window_length2',\n","    'TEMP_lag2',\n","    'TEMP_avg_window_length3',\n","    'TEMP_lag3',\n","    'TEMP_avg_window_length4',\n","    'TEMP_lag4',\n","    'TEMP_avg_window_length5',\n","    'TEMP_lag5',\n","    'TEMP_avg_window_length6',\n","    'TEMP_lag6',\n","    'TEMP_avg_window_length7',\n","    'TEMP_lag7',\n","    'TEMP_avg_window_length8',\n","    'TEMP_lag8',\n","    'TEMP_avg_window_length9',\n","    'TEMP_lag9',\n","    'TEMP_avg_window_length10',\n","    'TEMP_lag10',\n","    'TEMP_avg_window_length11',\n","    'PRES_lag1',\n","    'PRES_avg_window_length2',\n","    'PRES_lag2',\n","    'PRES_avg_window_length3',\n","    'PRES_lag3',\n","    'PRES_avg_window_length4',\n","    'PRES_lag4',\n","    'PRES_avg_window_length5',\n","    'PRES_lag5',\n","    'PRES_avg_window_length6',\n","    'PRES_lag6',\n","    'PRES_avg_window_length7',\n","    'PRES_lag7',\n","    'PRES_avg_window_length8',\n","    'PRES_lag8',\n","    'PRES_avg_window_length9',\n","    'PRES_lag9',\n","    'PRES_avg_window_length10',\n","    'PRES_lag10',\n","    'PRES_avg_window_length11',\n","    'Iws_lag1',\n","    'Iws_avg_window_length2',\n","    'Iws_lag2',\n","    'Iws_avg_window_length3',\n","    'Iws_lag3',\n","    'Iws_avg_window_length4',\n","    'Iws_lag4',\n","    'Iws_avg_window_length5',\n","    'Iws_lag5',\n","    'Iws_avg_window_length6',\n","    'Iws_lag6',\n","    'Iws_avg_window_length7',\n","    'Iws_lag7',\n","    'Iws_avg_window_length8',\n","    'Iws_lag8',\n","    'Iws_avg_window_length9',\n","    'Iws_lag9',\n","    'Iws_avg_window_length10',\n","    'Iws_lag10',\n","    'Iws_avg_window_length11',\n","    'Is_lag1',\n","    'Is_avg_window_length2',\n","    'Is_lag2',\n","    'Is_avg_window_length3',\n","    'Is_lag3',\n","    'Is_avg_window_length4',\n","    'Is_lag4',\n","    'Is_avg_window_length5',\n","    'Is_lag5',\n","    'Is_avg_window_length6',\n","    'Is_lag6',\n","    'Is_avg_window_length7',\n","    'Is_lag7',\n","    'Is_avg_window_length8',\n","    'Is_lag8',\n","    'Is_avg_window_length9',\n","    'Is_lag9',\n","    'Is_avg_window_length10',\n","    'Is_lag10',\n","    'Is_avg_window_length11',\n","    'Ir_lag1',\n","    'Ir_avg_window_length2',\n","    'Ir_lag2',\n","    'Ir_avg_window_length3',\n","    'Ir_lag3',\n","    'Ir_avg_window_length4',\n","    'Ir_lag4',\n","    'Ir_avg_window_length5',\n","    'Ir_lag5',\n","    'Ir_avg_window_length6',\n","    'Ir_lag6',\n","    'Ir_avg_window_length7',\n","    'Ir_lag7',\n","    'Ir_avg_window_length8',\n","    'Ir_lag8',\n","    'Ir_avg_window_length9',\n","    'Ir_lag9',\n","    'Ir_avg_window_length10',\n","    'Ir_lag10',\n","    'Ir_avg_window_length11',\n","    'time',\n","    'time.year',\n","    'time.month',\n","    'time.day',\n","    'time.dayofweek'],\n","   'feature_metadata': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a23ef267490>,\n","   'memory_size': 27888250,\n","   'compile_time': None},\n","  'CatBoost': {'name': 'CatBoost',\n","   'model_type': 'CatBoostModel',\n","   'problem_type': 'regression',\n","   'eval_metric': 'root_mean_squared_error',\n","   'stopping_metric': 'root_mean_squared_error',\n","   'fit_time': 56.42546486854553,\n","   'num_classes': None,\n","   'quantile_levels': None,\n","   'predict_time': 0.01020193099975586,\n","   'val_score': -28.897976068314566,\n","   'hyperparameters': {'iterations': 10000,\n","    'learning_rate': 0.05,\n","    'random_seed': 0,\n","    'allow_writing_files': False,\n","    'eval_metric': 'RMSE'},\n","   'hyperparameters_fit': {'iterations': 718},\n","   'hyperparameters_nondefault': [],\n","   'ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","    'max_time_limit_ratio': 1.0,\n","    'max_time_limit': None,\n","    'min_time_limit': 0,\n","    'valid_raw_types': ['bool', 'int', 'float', 'category'],\n","    'valid_special_types': None,\n","    'ignored_type_group_special': None,\n","    'ignored_type_group_raw': None,\n","    'get_features_kwargs': None,\n","    'get_features_kwargs_extra': None,\n","    'predict_1_batch_size': None,\n","    'temperature_scalar': None},\n","   'num_features': 145,\n","   'features': ['pm2.5_lag1',\n","    'pm2.5_avg_window_length2',\n","    'pm2.5_lag2',\n","    'pm2.5_avg_window_length3',\n","    'pm2.5_lag3',\n","    'pm2.5_avg_window_length4',\n","    'pm2.5_lag4',\n","    'pm2.5_avg_window_length5',\n","    'pm2.5_lag5',\n","    'pm2.5_avg_window_length6',\n","    'pm2.5_lag6',\n","    'pm2.5_avg_window_length7',\n","    'pm2.5_lag7',\n","    'pm2.5_avg_window_length8',\n","    'pm2.5_lag8',\n","    'pm2.5_avg_window_length9',\n","    'pm2.5_lag9',\n","    'pm2.5_avg_window_length10',\n","    'pm2.5_lag10',\n","    'pm2.5_avg_window_length11',\n","    'DEWP_lag1',\n","    'DEWP_avg_window_length2',\n","    'DEWP_lag2',\n","    'DEWP_avg_window_length3',\n","    'DEWP_lag3',\n","    'DEWP_avg_window_length4',\n","    'DEWP_lag4',\n","    'DEWP_avg_window_length5',\n","    'DEWP_lag5',\n","    'DEWP_avg_window_length6',\n","    'DEWP_lag6',\n","    'DEWP_avg_window_length7',\n","    'DEWP_lag7',\n","    'DEWP_avg_window_length8',\n","    'DEWP_lag8',\n","    'DEWP_avg_window_length9',\n","    'DEWP_lag9',\n","    'DEWP_avg_window_length10',\n","    'DEWP_lag10',\n","    'DEWP_avg_window_length11',\n","    'TEMP_lag1',\n","    'TEMP_avg_window_length2',\n","    'TEMP_lag2',\n","    'TEMP_avg_window_length3',\n","    'TEMP_lag3',\n","    'TEMP_avg_window_length4',\n","    'TEMP_lag4',\n","    'TEMP_avg_window_length5',\n","    'TEMP_lag5',\n","    'TEMP_avg_window_length6',\n","    'TEMP_lag6',\n","    'TEMP_avg_window_length7',\n","    'TEMP_lag7',\n","    'TEMP_avg_window_length8',\n","    'TEMP_lag8',\n","    'TEMP_avg_window_length9',\n","    'TEMP_lag9',\n","    'TEMP_avg_window_length10',\n","    'TEMP_lag10',\n","    'TEMP_avg_window_length11',\n","    'PRES_lag1',\n","    'PRES_avg_window_length2',\n","    'PRES_lag2',\n","    'PRES_avg_window_length3',\n","    'PRES_lag3',\n","    'PRES_avg_window_length4',\n","    'PRES_lag4',\n","    'PRES_avg_window_length5',\n","    'PRES_lag5',\n","    'PRES_avg_window_length6',\n","    'PRES_lag6',\n","    'PRES_avg_window_length7',\n","    'PRES_lag7',\n","    'PRES_avg_window_length8',\n","    'PRES_lag8',\n","    'PRES_avg_window_length9',\n","    'PRES_lag9',\n","    'PRES_avg_window_length10',\n","    'PRES_lag10',\n","    'PRES_avg_window_length11',\n","    'Iws_lag1',\n","    'Iws_avg_window_length2',\n","    'Iws_lag2',\n","    'Iws_avg_window_length3',\n","    'Iws_lag3',\n","    'Iws_avg_window_length4',\n","    'Iws_lag4',\n","    'Iws_avg_window_length5',\n","    'Iws_lag5',\n","    'Iws_avg_window_length6',\n","    'Iws_lag6',\n","    'Iws_avg_window_length7',\n","    'Iws_lag7',\n","    'Iws_avg_window_length8',\n","    'Iws_lag8',\n","    'Iws_avg_window_length9',\n","    'Iws_lag9',\n","    'Iws_avg_window_length10',\n","    'Iws_lag10',\n","    'Iws_avg_window_length11',\n","    'Is_lag1',\n","    'Is_avg_window_length2',\n","    'Is_lag2',\n","    'Is_avg_window_length3',\n","    'Is_lag3',\n","    'Is_avg_window_length4',\n","    'Is_lag4',\n","    'Is_avg_window_length5',\n","    'Is_lag5',\n","    'Is_avg_window_length6',\n","    'Is_lag6',\n","    'Is_avg_window_length7',\n","    'Is_lag7',\n","    'Is_avg_window_length8',\n","    'Is_lag8',\n","    'Is_avg_window_length9',\n","    'Is_lag9',\n","    'Is_avg_window_length10',\n","    'Is_lag10',\n","    'Is_avg_window_length11',\n","    'Ir_lag1',\n","    'Ir_avg_window_length2',\n","    'Ir_lag2',\n","    'Ir_avg_window_length3',\n","    'Ir_lag3',\n","    'Ir_avg_window_length4',\n","    'Ir_lag4',\n","    'Ir_avg_window_length5',\n","    'Ir_lag5',\n","    'Ir_avg_window_length6',\n","    'Ir_lag6',\n","    'Ir_avg_window_length7',\n","    'Ir_lag7',\n","    'Ir_avg_window_length8',\n","    'Ir_lag8',\n","    'Ir_avg_window_length9',\n","    'Ir_lag9',\n","    'Ir_avg_window_length10',\n","    'Ir_lag10',\n","    'Ir_avg_window_length11',\n","    'time',\n","    'time.year',\n","    'time.month',\n","    'time.day',\n","    'time.dayofweek'],\n","   'feature_metadata': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a23ef267ee0>,\n","   'memory_size': 805487,\n","   'compile_time': None},\n","  'XGBoost': {'name': 'XGBoost',\n","   'model_type': 'XGBoostModel',\n","   'problem_type': 'regression',\n","   'eval_metric': 'root_mean_squared_error',\n","   'stopping_metric': 'root_mean_squared_error',\n","   'fit_time': 22.67589783668518,\n","   'num_classes': None,\n","   'quantile_levels': None,\n","   'predict_time': 0.09731554985046387,\n","   'val_score': -26.580756207199524,\n","   'hyperparameters': {'n_estimators': 10000,\n","    'learning_rate': 0.1,\n","    'n_jobs': -1,\n","    'proc.max_category_levels': 100,\n","    'objective': 'reg:squarederror',\n","    'booster': 'gbtree'},\n","   'hyperparameters_fit': {'n_estimators': 272},\n","   'hyperparameters_nondefault': [],\n","   'ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","    'max_time_limit_ratio': 1.0,\n","    'max_time_limit': None,\n","    'min_time_limit': 0,\n","    'valid_raw_types': ['bool', 'int', 'float', 'category'],\n","    'valid_special_types': None,\n","    'ignored_type_group_special': None,\n","    'ignored_type_group_raw': None,\n","    'get_features_kwargs': None,\n","    'get_features_kwargs_extra': None,\n","    'predict_1_batch_size': None,\n","    'temperature_scalar': None},\n","   'num_features': 145,\n","   'features': ['pm2.5_lag1',\n","    'pm2.5_avg_window_length2',\n","    'pm2.5_lag2',\n","    'pm2.5_avg_window_length3',\n","    'pm2.5_lag3',\n","    'pm2.5_avg_window_length4',\n","    'pm2.5_lag4',\n","    'pm2.5_avg_window_length5',\n","    'pm2.5_lag5',\n","    'pm2.5_avg_window_length6',\n","    'pm2.5_lag6',\n","    'pm2.5_avg_window_length7',\n","    'pm2.5_lag7',\n","    'pm2.5_avg_window_length8',\n","    'pm2.5_lag8',\n","    'pm2.5_avg_window_length9',\n","    'pm2.5_lag9',\n","    'pm2.5_avg_window_length10',\n","    'pm2.5_lag10',\n","    'pm2.5_avg_window_length11',\n","    'DEWP_lag1',\n","    'DEWP_avg_window_length2',\n","    'DEWP_lag2',\n","    'DEWP_avg_window_length3',\n","    'DEWP_lag3',\n","    'DEWP_avg_window_length4',\n","    'DEWP_lag4',\n","    'DEWP_avg_window_length5',\n","    'DEWP_lag5',\n","    'DEWP_avg_window_length6',\n","    'DEWP_lag6',\n","    'DEWP_avg_window_length7',\n","    'DEWP_lag7',\n","    'DEWP_avg_window_length8',\n","    'DEWP_lag8',\n","    'DEWP_avg_window_length9',\n","    'DEWP_lag9',\n","    'DEWP_avg_window_length10',\n","    'DEWP_lag10',\n","    'DEWP_avg_window_length11',\n","    'TEMP_lag1',\n","    'TEMP_avg_window_length2',\n","    'TEMP_lag2',\n","    'TEMP_avg_window_length3',\n","    'TEMP_lag3',\n","    'TEMP_avg_window_length4',\n","    'TEMP_lag4',\n","    'TEMP_avg_window_length5',\n","    'TEMP_lag5',\n","    'TEMP_avg_window_length6',\n","    'TEMP_lag6',\n","    'TEMP_avg_window_length7',\n","    'TEMP_lag7',\n","    'TEMP_avg_window_length8',\n","    'TEMP_lag8',\n","    'TEMP_avg_window_length9',\n","    'TEMP_lag9',\n","    'TEMP_avg_window_length10',\n","    'TEMP_lag10',\n","    'TEMP_avg_window_length11',\n","    'PRES_lag1',\n","    'PRES_avg_window_length2',\n","    'PRES_lag2',\n","    'PRES_avg_window_length3',\n","    'PRES_lag3',\n","    'PRES_avg_window_length4',\n","    'PRES_lag4',\n","    'PRES_avg_window_length5',\n","    'PRES_lag5',\n","    'PRES_avg_window_length6',\n","    'PRES_lag6',\n","    'PRES_avg_window_length7',\n","    'PRES_lag7',\n","    'PRES_avg_window_length8',\n","    'PRES_lag8',\n","    'PRES_avg_window_length9',\n","    'PRES_lag9',\n","    'PRES_avg_window_length10',\n","    'PRES_lag10',\n","    'PRES_avg_window_length11',\n","    'Iws_lag1',\n","    'Iws_avg_window_length2',\n","    'Iws_lag2',\n","    'Iws_avg_window_length3',\n","    'Iws_lag3',\n","    'Iws_avg_window_length4',\n","    'Iws_lag4',\n","    'Iws_avg_window_length5',\n","    'Iws_lag5',\n","    'Iws_avg_window_length6',\n","    'Iws_lag6',\n","    'Iws_avg_window_length7',\n","    'Iws_lag7',\n","    'Iws_avg_window_length8',\n","    'Iws_lag8',\n","    'Iws_avg_window_length9',\n","    'Iws_lag9',\n","    'Iws_avg_window_length10',\n","    'Iws_lag10',\n","    'Iws_avg_window_length11',\n","    'Is_lag1',\n","    'Is_avg_window_length2',\n","    'Is_lag2',\n","    'Is_avg_window_length3',\n","    'Is_lag3',\n","    'Is_avg_window_length4',\n","    'Is_lag4',\n","    'Is_avg_window_length5',\n","    'Is_lag5',\n","    'Is_avg_window_length6',\n","    'Is_lag6',\n","    'Is_avg_window_length7',\n","    'Is_lag7',\n","    'Is_avg_window_length8',\n","    'Is_lag8',\n","    'Is_avg_window_length9',\n","    'Is_lag9',\n","    'Is_avg_window_length10',\n","    'Is_lag10',\n","    'Is_avg_window_length11',\n","    'Ir_lag1',\n","    'Ir_avg_window_length2',\n","    'Ir_lag2',\n","    'Ir_avg_window_length3',\n","    'Ir_lag3',\n","    'Ir_avg_window_length4',\n","    'Ir_lag4',\n","    'Ir_avg_window_length5',\n","    'Ir_lag5',\n","    'Ir_avg_window_length6',\n","    'Ir_lag6',\n","    'Ir_avg_window_length7',\n","    'Ir_lag7',\n","    'Ir_avg_window_length8',\n","    'Ir_lag8',\n","    'Ir_avg_window_length9',\n","    'Ir_lag9',\n","    'Ir_avg_window_length10',\n","    'Ir_lag10',\n","    'Ir_avg_window_length11',\n","    'time',\n","    'time.year',\n","    'time.month',\n","    'time.day',\n","    'time.dayofweek'],\n","   'feature_metadata': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a23ef9e1cf0>,\n","   'memory_size': 1491919,\n","   'compile_time': None},\n","  'NeuralNetTorch': {'name': 'NeuralNetTorch',\n","   'model_type': 'TabularNeuralNetTorchModel',\n","   'problem_type': 'regression',\n","   'eval_metric': 'root_mean_squared_error',\n","   'stopping_metric': 'root_mean_squared_error',\n","   'fit_time': 36.831679344177246,\n","   'num_classes': None,\n","   'quantile_levels': None,\n","   'predict_time': 0.18382525444030762,\n","   'val_score': -33.91629921863809,\n","   'hyperparameters': {'num_epochs': 500,\n","    'epochs_wo_improve': 20,\n","    'activation': 'relu',\n","    'embedding_size_factor': 1.0,\n","    'embed_exponent': 0.56,\n","    'max_embedding_dim': 100,\n","    'y_range': None,\n","    'y_range_extend': 0.05,\n","    'dropout_prob': 0.1,\n","    'optimizer': 'adam',\n","    'learning_rate': 0.0003,\n","    'weight_decay': 1e-06,\n","    'proc.embed_min_categories': 4,\n","    'proc.impute_strategy': 'median',\n","    'proc.max_category_levels': 100,\n","    'proc.skew_threshold': 0.99,\n","    'use_ngram_features': False,\n","    'num_layers': 4,\n","    'hidden_size': 128,\n","    'max_batch_size': 512,\n","    'use_batchnorm': False,\n","    'loss_function': 'auto'},\n","   'hyperparameters_fit': {'batch_size': 128, 'num_epochs': 6},\n","   'hyperparameters_nondefault': [],\n","   'ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","    'max_time_limit_ratio': 1.0,\n","    'max_time_limit': None,\n","    'min_time_limit': 0,\n","    'valid_raw_types': ['bool', 'int', 'float', 'category'],\n","    'valid_special_types': None,\n","    'ignored_type_group_special': ['text_ngram', 'text_as_category'],\n","    'ignored_type_group_raw': None,\n","    'get_features_kwargs': None,\n","    'get_features_kwargs_extra': None,\n","    'predict_1_batch_size': None,\n","    'temperature_scalar': None},\n","   'num_features': 145,\n","   'features': ['pm2.5_lag1',\n","    'pm2.5_avg_window_length2',\n","    'pm2.5_lag2',\n","    'pm2.5_avg_window_length3',\n","    'pm2.5_lag3',\n","    'pm2.5_avg_window_length4',\n","    'pm2.5_lag4',\n","    'pm2.5_avg_window_length5',\n","    'pm2.5_lag5',\n","    'pm2.5_avg_window_length6',\n","    'pm2.5_lag6',\n","    'pm2.5_avg_window_length7',\n","    'pm2.5_lag7',\n","    'pm2.5_avg_window_length8',\n","    'pm2.5_lag8',\n","    'pm2.5_avg_window_length9',\n","    'pm2.5_lag9',\n","    'pm2.5_avg_window_length10',\n","    'pm2.5_lag10',\n","    'pm2.5_avg_window_length11',\n","    'DEWP_lag1',\n","    'DEWP_avg_window_length2',\n","    'DEWP_lag2',\n","    'DEWP_avg_window_length3',\n","    'DEWP_lag3',\n","    'DEWP_avg_window_length4',\n","    'DEWP_lag4',\n","    'DEWP_avg_window_length5',\n","    'DEWP_lag5',\n","    'DEWP_avg_window_length6',\n","    'DEWP_lag6',\n","    'DEWP_avg_window_length7',\n","    'DEWP_lag7',\n","    'DEWP_avg_window_length8',\n","    'DEWP_lag8',\n","    'DEWP_avg_window_length9',\n","    'DEWP_lag9',\n","    'DEWP_avg_window_length10',\n","    'DEWP_lag10',\n","    'DEWP_avg_window_length11',\n","    'TEMP_lag1',\n","    'TEMP_avg_window_length2',\n","    'TEMP_lag2',\n","    'TEMP_avg_window_length3',\n","    'TEMP_lag3',\n","    'TEMP_avg_window_length4',\n","    'TEMP_lag4',\n","    'TEMP_avg_window_length5',\n","    'TEMP_lag5',\n","    'TEMP_avg_window_length6',\n","    'TEMP_lag6',\n","    'TEMP_avg_window_length7',\n","    'TEMP_lag7',\n","    'TEMP_avg_window_length8',\n","    'TEMP_lag8',\n","    'TEMP_avg_window_length9',\n","    'TEMP_lag9',\n","    'TEMP_avg_window_length10',\n","    'TEMP_lag10',\n","    'TEMP_avg_window_length11',\n","    'PRES_lag1',\n","    'PRES_avg_window_length2',\n","    'PRES_lag2',\n","    'PRES_avg_window_length3',\n","    'PRES_lag3',\n","    'PRES_avg_window_length4',\n","    'PRES_lag4',\n","    'PRES_avg_window_length5',\n","    'PRES_lag5',\n","    'PRES_avg_window_length6',\n","    'PRES_lag6',\n","    'PRES_avg_window_length7',\n","    'PRES_lag7',\n","    'PRES_avg_window_length8',\n","    'PRES_lag8',\n","    'PRES_avg_window_length9',\n","    'PRES_lag9',\n","    'PRES_avg_window_length10',\n","    'PRES_lag10',\n","    'PRES_avg_window_length11',\n","    'Iws_lag1',\n","    'Iws_avg_window_length2',\n","    'Iws_lag2',\n","    'Iws_avg_window_length3',\n","    'Iws_lag3',\n","    'Iws_avg_window_length4',\n","    'Iws_lag4',\n","    'Iws_avg_window_length5',\n","    'Iws_lag5',\n","    'Iws_avg_window_length6',\n","    'Iws_lag6',\n","    'Iws_avg_window_length7',\n","    'Iws_lag7',\n","    'Iws_avg_window_length8',\n","    'Iws_lag8',\n","    'Iws_avg_window_length9',\n","    'Iws_lag9',\n","    'Iws_avg_window_length10',\n","    'Iws_lag10',\n","    'Iws_avg_window_length11',\n","    'Is_lag1',\n","    'Is_avg_window_length2',\n","    'Is_lag2',\n","    'Is_avg_window_length3',\n","    'Is_lag3',\n","    'Is_avg_window_length4',\n","    'Is_lag4',\n","    'Is_avg_window_length5',\n","    'Is_lag5',\n","    'Is_avg_window_length6',\n","    'Is_lag6',\n","    'Is_avg_window_length7',\n","    'Is_lag7',\n","    'Is_avg_window_length8',\n","    'Is_lag8',\n","    'Is_avg_window_length9',\n","    'Is_lag9',\n","    'Is_avg_window_length10',\n","    'Is_lag10',\n","    'Is_avg_window_length11',\n","    'Ir_lag1',\n","    'Ir_avg_window_length2',\n","    'Ir_lag2',\n","    'Ir_avg_window_length3',\n","    'Ir_lag3',\n","    'Ir_avg_window_length4',\n","    'Ir_lag4',\n","    'Ir_avg_window_length5',\n","    'Ir_lag5',\n","    'Ir_avg_window_length6',\n","    'Ir_lag6',\n","    'Ir_avg_window_length7',\n","    'Ir_lag7',\n","    'Ir_avg_window_length8',\n","    'Ir_lag8',\n","    'Ir_avg_window_length9',\n","    'Ir_lag9',\n","    'Ir_avg_window_length10',\n","    'Ir_lag10',\n","    'Ir_avg_window_length11',\n","    'time',\n","    'time.year',\n","    'time.month',\n","    'time.day',\n","    'time.dayofweek'],\n","   'feature_metadata': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a23ef264f70>,\n","   'memory_size': 944121,\n","   'compile_time': None},\n","  'LightGBMLarge': {'name': 'LightGBMLarge',\n","   'model_type': 'LGBModel',\n","   'problem_type': 'regression',\n","   'eval_metric': 'root_mean_squared_error',\n","   'stopping_metric': 'root_mean_squared_error',\n","   'fit_time': 16.605053901672363,\n","   'num_classes': None,\n","   'quantile_levels': None,\n","   'predict_time': 0.030626296997070312,\n","   'val_score': -29.292397281273747,\n","   'hyperparameters': {'learning_rate': 0.03,\n","    'num_leaves': 128,\n","    'feature_fraction': 0.9,\n","    'min_data_in_leaf': 5},\n","   'hyperparameters_fit': {'num_boost_round': 105},\n","   'hyperparameters_nondefault': ['learning_rate',\n","    'num_leaves',\n","    'feature_fraction',\n","    'min_data_in_leaf'],\n","   'ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","    'max_time_limit_ratio': 1.0,\n","    'max_time_limit': None,\n","    'min_time_limit': 0,\n","    'valid_raw_types': ['bool', 'int', 'float', 'category'],\n","    'valid_special_types': None,\n","    'ignored_type_group_special': None,\n","    'ignored_type_group_raw': None,\n","    'get_features_kwargs': None,\n","    'get_features_kwargs_extra': None,\n","    'predict_1_batch_size': None,\n","    'temperature_scalar': None},\n","   'num_features': 145,\n","   'features': ['pm2.5_lag1',\n","    'pm2.5_avg_window_length2',\n","    'pm2.5_lag2',\n","    'pm2.5_avg_window_length3',\n","    'pm2.5_lag3',\n","    'pm2.5_avg_window_length4',\n","    'pm2.5_lag4',\n","    'pm2.5_avg_window_length5',\n","    'pm2.5_lag5',\n","    'pm2.5_avg_window_length6',\n","    'pm2.5_lag6',\n","    'pm2.5_avg_window_length7',\n","    'pm2.5_lag7',\n","    'pm2.5_avg_window_length8',\n","    'pm2.5_lag8',\n","    'pm2.5_avg_window_length9',\n","    'pm2.5_lag9',\n","    'pm2.5_avg_window_length10',\n","    'pm2.5_lag10',\n","    'pm2.5_avg_window_length11',\n","    'DEWP_lag1',\n","    'DEWP_avg_window_length2',\n","    'DEWP_lag2',\n","    'DEWP_avg_window_length3',\n","    'DEWP_lag3',\n","    'DEWP_avg_window_length4',\n","    'DEWP_lag4',\n","    'DEWP_avg_window_length5',\n","    'DEWP_lag5',\n","    'DEWP_avg_window_length6',\n","    'DEWP_lag6',\n","    'DEWP_avg_window_length7',\n","    'DEWP_lag7',\n","    'DEWP_avg_window_length8',\n","    'DEWP_lag8',\n","    'DEWP_avg_window_length9',\n","    'DEWP_lag9',\n","    'DEWP_avg_window_length10',\n","    'DEWP_lag10',\n","    'DEWP_avg_window_length11',\n","    'TEMP_lag1',\n","    'TEMP_avg_window_length2',\n","    'TEMP_lag2',\n","    'TEMP_avg_window_length3',\n","    'TEMP_lag3',\n","    'TEMP_avg_window_length4',\n","    'TEMP_lag4',\n","    'TEMP_avg_window_length5',\n","    'TEMP_lag5',\n","    'TEMP_avg_window_length6',\n","    'TEMP_lag6',\n","    'TEMP_avg_window_length7',\n","    'TEMP_lag7',\n","    'TEMP_avg_window_length8',\n","    'TEMP_lag8',\n","    'TEMP_avg_window_length9',\n","    'TEMP_lag9',\n","    'TEMP_avg_window_length10',\n","    'TEMP_lag10',\n","    'TEMP_avg_window_length11',\n","    'PRES_lag1',\n","    'PRES_avg_window_length2',\n","    'PRES_lag2',\n","    'PRES_avg_window_length3',\n","    'PRES_lag3',\n","    'PRES_avg_window_length4',\n","    'PRES_lag4',\n","    'PRES_avg_window_length5',\n","    'PRES_lag5',\n","    'PRES_avg_window_length6',\n","    'PRES_lag6',\n","    'PRES_avg_window_length7',\n","    'PRES_lag7',\n","    'PRES_avg_window_length8',\n","    'PRES_lag8',\n","    'PRES_avg_window_length9',\n","    'PRES_lag9',\n","    'PRES_avg_window_length10',\n","    'PRES_lag10',\n","    'PRES_avg_window_length11',\n","    'Iws_lag1',\n","    'Iws_avg_window_length2',\n","    'Iws_lag2',\n","    'Iws_avg_window_length3',\n","    'Iws_lag3',\n","    'Iws_avg_window_length4',\n","    'Iws_lag4',\n","    'Iws_avg_window_length5',\n","    'Iws_lag5',\n","    'Iws_avg_window_length6',\n","    'Iws_lag6',\n","    'Iws_avg_window_length7',\n","    'Iws_lag7',\n","    'Iws_avg_window_length8',\n","    'Iws_lag8',\n","    'Iws_avg_window_length9',\n","    'Iws_lag9',\n","    'Iws_avg_window_length10',\n","    'Iws_lag10',\n","    'Iws_avg_window_length11',\n","    'Is_lag1',\n","    'Is_avg_window_length2',\n","    'Is_lag2',\n","    'Is_avg_window_length3',\n","    'Is_lag3',\n","    'Is_avg_window_length4',\n","    'Is_lag4',\n","    'Is_avg_window_length5',\n","    'Is_lag5',\n","    'Is_avg_window_length6',\n","    'Is_lag6',\n","    'Is_avg_window_length7',\n","    'Is_lag7',\n","    'Is_avg_window_length8',\n","    'Is_lag8',\n","    'Is_avg_window_length9',\n","    'Is_lag9',\n","    'Is_avg_window_length10',\n","    'Is_lag10',\n","    'Is_avg_window_length11',\n","    'Ir_lag1',\n","    'Ir_avg_window_length2',\n","    'Ir_lag2',\n","    'Ir_avg_window_length3',\n","    'Ir_lag3',\n","    'Ir_avg_window_length4',\n","    'Ir_lag4',\n","    'Ir_avg_window_length5',\n","    'Ir_lag5',\n","    'Ir_avg_window_length6',\n","    'Ir_lag6',\n","    'Ir_avg_window_length7',\n","    'Ir_lag7',\n","    'Ir_avg_window_length8',\n","    'Ir_lag8',\n","    'Ir_avg_window_length9',\n","    'Ir_lag9',\n","    'Ir_avg_window_length10',\n","    'Ir_lag10',\n","    'Ir_avg_window_length11',\n","    'time',\n","    'time.year',\n","    'time.month',\n","    'time.day',\n","    'time.dayofweek'],\n","   'feature_metadata': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a241407dd50>,\n","   'memory_size': 1241593,\n","   'compile_time': None},\n","  'WeightedEnsemble_L2': {'name': 'WeightedEnsemble_L2',\n","   'model_type': 'WeightedEnsembleModel',\n","   'problem_type': 'regression',\n","   'eval_metric': 'root_mean_squared_error',\n","   'stopping_metric': 'root_mean_squared_error',\n","   'fit_time': 0.26963114738464355,\n","   'num_classes': None,\n","   'quantile_levels': None,\n","   'predict_time': 0.0007011890411376953,\n","   'val_score': -26.3096153860877,\n","   'hyperparameters': {'use_orig_features': False,\n","    'max_base_models': 25,\n","    'max_base_models_per_type': 5,\n","    'save_bag_folds': True},\n","   'hyperparameters_fit': {},\n","   'hyperparameters_nondefault': ['save_bag_folds'],\n","   'ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","    'max_time_limit_ratio': 1.0,\n","    'max_time_limit': None,\n","    'min_time_limit': 0,\n","    'valid_raw_types': None,\n","    'valid_special_types': None,\n","    'ignored_type_group_special': None,\n","    'ignored_type_group_raw': None,\n","    'get_features_kwargs': None,\n","    'get_features_kwargs_extra': None,\n","    'predict_1_batch_size': None,\n","    'temperature_scalar': None,\n","    'drop_unique': False},\n","   'num_features': 2,\n","   'features': ['XGBoost', 'LightGBMXT'],\n","   'feature_metadata': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a23ef264eb0>,\n","   'memory_size': 3451,\n","   'compile_time': None,\n","   'bagged_info': {'child_model_type': 'GreedyWeightedEnsembleModel',\n","    'num_child_models': 1,\n","    'child_model_names': ['S1F1'],\n","    '_n_repeats': 1,\n","    '_k_per_n_repeat': [1],\n","    '_random_state': 2,\n","    'low_memory': False,\n","    'bagged_mode': False,\n","    'max_memory_size': 3451,\n","    'min_memory_size': 3451,\n","    'child_hyperparameters': {'ensemble_size': 100},\n","    'child_hyperparameters_fit': {'ensemble_size': 48},\n","    'child_ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","     'max_time_limit_ratio': 1.0,\n","     'max_time_limit': None,\n","     'min_time_limit': 0,\n","     'valid_raw_types': None,\n","     'valid_special_types': None,\n","     'ignored_type_group_special': None,\n","     'ignored_type_group_raw': None,\n","     'get_features_kwargs': None,\n","     'get_features_kwargs_extra': None,\n","     'predict_1_batch_size': None,\n","     'temperature_scalar': None,\n","     'drop_unique': False}},\n","   'stacker_info': {'num_base_models': 2,\n","    'base_model_names': ['LightGBMXT', 'XGBoost']},\n","   'children_info': {'S1F1': {'name': 'S1F1',\n","     'model_type': 'GreedyWeightedEnsembleModel',\n","     'problem_type': 'regression',\n","     'eval_metric': 'root_mean_squared_error',\n","     'stopping_metric': 'root_mean_squared_error',\n","     'fit_time': 0.26963114738464355,\n","     'num_classes': None,\n","     'quantile_levels': None,\n","     'predict_time': None,\n","     'val_score': None,\n","     'hyperparameters': {'ensemble_size': 100},\n","     'hyperparameters_fit': {'ensemble_size': 48},\n","     'hyperparameters_nondefault': [],\n","     'ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","      'max_time_limit_ratio': 1.0,\n","      'max_time_limit': None,\n","      'min_time_limit': 0,\n","      'valid_raw_types': None,\n","      'valid_special_types': None,\n","      'ignored_type_group_special': None,\n","      'ignored_type_group_raw': None,\n","      'get_features_kwargs': None,\n","      'get_features_kwargs_extra': None,\n","      'predict_1_batch_size': None,\n","      'temperature_scalar': None,\n","      'drop_unique': False},\n","     'num_features': 2,\n","     'features': ['LightGBMXT', 'XGBoost'],\n","     'feature_metadata': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a23ef265300>,\n","     'memory_size': 6879,\n","     'compile_time': None,\n","     'model_weights': {'LightGBMXT': 0.3541666666666667,\n","      'XGBoost': 0.6458333333333334}}}}}}"]},"metadata":{},"execution_count":232}]},{"cell_type":"code","source":["# import json\n","\n","# with open('model_param_preprocess.txt','w') as model_file:\n","#   for k, v in predictor.info().items():\n","#     model_file.write('%s:%s\\n' % (k, v))"],"metadata":{"id":"5s8il85LjKUv","executionInfo":{"status":"ok","timestamp":1689899091176,"user_tz":-120,"elapsed":11,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":233,"outputs":[]},{"cell_type":"code","source":["s = predictor.info()"],"metadata":{"id":"NZwloi06jsBE","executionInfo":{"status":"ok","timestamp":1689899096700,"user_tz":-120,"elapsed":5534,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":234,"outputs":[]},{"cell_type":"code","source":["s['model_info']['LightGBMLarge']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"q95Aktz2jw1B","executionInfo":{"status":"ok","timestamp":1689899096701,"user_tz":-120,"elapsed":21,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"ae78efd5-7c7e-44d0-c290-2ccf4b9cd7a7"},"execution_count":235,"outputs":[{"output_type":"execute_result","data":{"text/plain":["{'name': 'LightGBMLarge',\n"," 'model_type': 'LGBModel',\n"," 'problem_type': 'regression',\n"," 'eval_metric': 'root_mean_squared_error',\n"," 'stopping_metric': 'root_mean_squared_error',\n"," 'fit_time': 16.605053901672363,\n"," 'num_classes': None,\n"," 'quantile_levels': None,\n"," 'predict_time': 0.030626296997070312,\n"," 'val_score': -29.292397281273747,\n"," 'hyperparameters': {'learning_rate': 0.03,\n","  'num_leaves': 128,\n","  'feature_fraction': 0.9,\n","  'min_data_in_leaf': 5},\n"," 'hyperparameters_fit': {'num_boost_round': 105},\n"," 'hyperparameters_nondefault': ['learning_rate',\n","  'num_leaves',\n","  'feature_fraction',\n","  'min_data_in_leaf'],\n"," 'ag_args_fit': {'max_memory_usage_ratio': 1.0,\n","  'max_time_limit_ratio': 1.0,\n","  'max_time_limit': None,\n","  'min_time_limit': 0,\n","  'valid_raw_types': ['bool', 'int', 'float', 'category'],\n","  'valid_special_types': None,\n","  'ignored_type_group_special': None,\n","  'ignored_type_group_raw': None,\n","  'get_features_kwargs': None,\n","  'get_features_kwargs_extra': None,\n","  'predict_1_batch_size': None,\n","  'temperature_scalar': None},\n"," 'num_features': 145,\n"," 'features': ['pm2.5_lag1',\n","  'pm2.5_avg_window_length2',\n","  'pm2.5_lag2',\n","  'pm2.5_avg_window_length3',\n","  'pm2.5_lag3',\n","  'pm2.5_avg_window_length4',\n","  'pm2.5_lag4',\n","  'pm2.5_avg_window_length5',\n","  'pm2.5_lag5',\n","  'pm2.5_avg_window_length6',\n","  'pm2.5_lag6',\n","  'pm2.5_avg_window_length7',\n","  'pm2.5_lag7',\n","  'pm2.5_avg_window_length8',\n","  'pm2.5_lag8',\n","  'pm2.5_avg_window_length9',\n","  'pm2.5_lag9',\n","  'pm2.5_avg_window_length10',\n","  'pm2.5_lag10',\n","  'pm2.5_avg_window_length11',\n","  'DEWP_lag1',\n","  'DEWP_avg_window_length2',\n","  'DEWP_lag2',\n","  'DEWP_avg_window_length3',\n","  'DEWP_lag3',\n","  'DEWP_avg_window_length4',\n","  'DEWP_lag4',\n","  'DEWP_avg_window_length5',\n","  'DEWP_lag5',\n","  'DEWP_avg_window_length6',\n","  'DEWP_lag6',\n","  'DEWP_avg_window_length7',\n","  'DEWP_lag7',\n","  'DEWP_avg_window_length8',\n","  'DEWP_lag8',\n","  'DEWP_avg_window_length9',\n","  'DEWP_lag9',\n","  'DEWP_avg_window_length10',\n","  'DEWP_lag10',\n","  'DEWP_avg_window_length11',\n","  'TEMP_lag1',\n","  'TEMP_avg_window_length2',\n","  'TEMP_lag2',\n","  'TEMP_avg_window_length3',\n","  'TEMP_lag3',\n","  'TEMP_avg_window_length4',\n","  'TEMP_lag4',\n","  'TEMP_avg_window_length5',\n","  'TEMP_lag5',\n","  'TEMP_avg_window_length6',\n","  'TEMP_lag6',\n","  'TEMP_avg_window_length7',\n","  'TEMP_lag7',\n","  'TEMP_avg_window_length8',\n","  'TEMP_lag8',\n","  'TEMP_avg_window_length9',\n","  'TEMP_lag9',\n","  'TEMP_avg_window_length10',\n","  'TEMP_lag10',\n","  'TEMP_avg_window_length11',\n","  'PRES_lag1',\n","  'PRES_avg_window_length2',\n","  'PRES_lag2',\n","  'PRES_avg_window_length3',\n","  'PRES_lag3',\n","  'PRES_avg_window_length4',\n","  'PRES_lag4',\n","  'PRES_avg_window_length5',\n","  'PRES_lag5',\n","  'PRES_avg_window_length6',\n","  'PRES_lag6',\n","  'PRES_avg_window_length7',\n","  'PRES_lag7',\n","  'PRES_avg_window_length8',\n","  'PRES_lag8',\n","  'PRES_avg_window_length9',\n","  'PRES_lag9',\n","  'PRES_avg_window_length10',\n","  'PRES_lag10',\n","  'PRES_avg_window_length11',\n","  'Iws_lag1',\n","  'Iws_avg_window_length2',\n","  'Iws_lag2',\n","  'Iws_avg_window_length3',\n","  'Iws_lag3',\n","  'Iws_avg_window_length4',\n","  'Iws_lag4',\n","  'Iws_avg_window_length5',\n","  'Iws_lag5',\n","  'Iws_avg_window_length6',\n","  'Iws_lag6',\n","  'Iws_avg_window_length7',\n","  'Iws_lag7',\n","  'Iws_avg_window_length8',\n","  'Iws_lag8',\n","  'Iws_avg_window_length9',\n","  'Iws_lag9',\n","  'Iws_avg_window_length10',\n","  'Iws_lag10',\n","  'Iws_avg_window_length11',\n","  'Is_lag1',\n","  'Is_avg_window_length2',\n","  'Is_lag2',\n","  'Is_avg_window_length3',\n","  'Is_lag3',\n","  'Is_avg_window_length4',\n","  'Is_lag4',\n","  'Is_avg_window_length5',\n","  'Is_lag5',\n","  'Is_avg_window_length6',\n","  'Is_lag6',\n","  'Is_avg_window_length7',\n","  'Is_lag7',\n","  'Is_avg_window_length8',\n","  'Is_lag8',\n","  'Is_avg_window_length9',\n","  'Is_lag9',\n","  'Is_avg_window_length10',\n","  'Is_lag10',\n","  'Is_avg_window_length11',\n","  'Ir_lag1',\n","  'Ir_avg_window_length2',\n","  'Ir_lag2',\n","  'Ir_avg_window_length3',\n","  'Ir_lag3',\n","  'Ir_avg_window_length4',\n","  'Ir_lag4',\n","  'Ir_avg_window_length5',\n","  'Ir_lag5',\n","  'Ir_avg_window_length6',\n","  'Ir_lag6',\n","  'Ir_avg_window_length7',\n","  'Ir_lag7',\n","  'Ir_avg_window_length8',\n","  'Ir_lag8',\n","  'Ir_avg_window_length9',\n","  'Ir_lag9',\n","  'Ir_avg_window_length10',\n","  'Ir_lag10',\n","  'Ir_avg_window_length11',\n","  'time',\n","  'time.year',\n","  'time.month',\n","  'time.day',\n","  'time.dayofweek'],\n"," 'feature_metadata': <autogluon.common.features.feature_metadata.FeatureMetadata at 0x7a23ef266d10>,\n"," 'memory_size': 1241593,\n"," 'compile_time': None}"]},"metadata":{},"execution_count":235}]},{"cell_type":"code","source":[],"metadata":{"id":"CrYOsZR1oE2A","executionInfo":{"status":"ok","timestamp":1689899096701,"user_tz":-120,"elapsed":19,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}}},"execution_count":235,"outputs":[]}]}