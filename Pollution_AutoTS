{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15293,"status":"ok","timestamp":1693222042451,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"},"user_tz":-120},"id":"V8GliVlEUn8J","outputId":"87a67caf-580c-4ab7-816e-88987660a936"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting autots\n","  Downloading autots-0.6.0-py3-none-any.whl (765 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m765.3/765.3 kB\u001b[0m \u001b[31m6.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy>=1.14.6 in /usr/local/lib/python3.10/dist-packages (from autots) (1.23.5)\n","Requirement already satisfied: pandas>=0.25.0 in /usr/local/lib/python3.10/dist-packages (from autots) (1.5.3)\n","Requirement already satisfied: statsmodels>=0.10.0 in /usr/local/lib/python3.10/dist-packages (from autots) (0.14.0)\n","Requirement already satisfied: scikit-learn>=0.20.0 in /usr/local/lib/python3.10/dist-packages (from autots) (1.2.2)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.25.0->autots) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas>=0.25.0->autots) (2023.3)\n","Requirement already satisfied: scipy>=1.3.2 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20.0->autots) (1.10.1)\n","Requirement already satisfied: joblib>=1.1.1 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20.0->autots) (1.3.2)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.10/dist-packages (from scikit-learn>=0.20.0->autots) (3.2.0)\n","Requirement already satisfied: patsy>=0.5.2 in /usr/local/lib/python3.10/dist-packages (from statsmodels>=0.10.0->autots) (0.5.3)\n","Requirement already satisfied: packaging>=21.3 in /usr/local/lib/python3.10/dist-packages (from statsmodels>=0.10.0->autots) (23.1)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.2->statsmodels>=0.10.0->autots) (1.16.0)\n","Installing collected packages: autots\n","Successfully installed autots-0.6.0\n"]}],"source":["!pip install autots\n","from autots import AutoTS"]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":3,"status":"ok","timestamp":1693222042451,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"},"user_tz":-120},"id":"6OjsSo2rr1oU"},"outputs":[],"source":["from autots import AutoTS\n","import pandas as pd\n","import matplotlib.pyplot as plt\n"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"elapsed":1055,"status":"ok","timestamp":1693222043504,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"},"user_tz":-120},"id":"t664IMTbd4JA","outputId":"b2091dd6-0e91-48ae-ad89-2e554beae4e5"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["              pm2.5          DEWP          TEMP          PRES           Iws  \\\n","count  41757.000000  43800.000000  43800.000000  43800.000000  43800.000000   \n","mean      98.613215      1.828516     12.459041   1016.447306     23.894307   \n","std       92.050387     14.429326     12.193384     10.271411     50.022729   \n","min        0.000000    -40.000000    -19.000000    991.000000      0.450000   \n","25%       29.000000    -10.000000      2.000000   1008.000000      1.790000   \n","50%       72.000000      2.000000     14.000000   1016.000000      5.370000   \n","75%      137.000000     15.000000     23.000000   1025.000000     21.910000   \n","max      994.000000     28.000000     42.000000   1046.000000    585.600000   \n","\n","                 Is            Ir  \n","count  43800.000000  43800.000000  \n","mean       0.052763      0.195023  \n","std        0.760582      1.416247  \n","min        0.000000      0.000000  \n","25%        0.000000      0.000000  \n","50%        0.000000      0.000000  \n","75%        0.000000      0.000000  \n","max       27.000000     36.000000  "],"text/html":["\n","  <div id=\"df-9eccc2d3-d19f-41c2-80d1-a3a77e616135\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>pm2.5</th>\n","      <th>DEWP</th>\n","      <th>TEMP</th>\n","      <th>PRES</th>\n","      <th>Iws</th>\n","      <th>Is</th>\n","      <th>Ir</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>41757.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","      <td>43800.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>98.613215</td>\n","      <td>1.828516</td>\n","      <td>12.459041</td>\n","      <td>1016.447306</td>\n","      <td>23.894307</td>\n","      <td>0.052763</td>\n","      <td>0.195023</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>92.050387</td>\n","      <td>14.429326</td>\n","      <td>12.193384</td>\n","      <td>10.271411</td>\n","      <td>50.022729</td>\n","      <td>0.760582</td>\n","      <td>1.416247</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>-40.000000</td>\n","      <td>-19.000000</td>\n","      <td>991.000000</td>\n","      <td>0.450000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>29.000000</td>\n","      <td>-10.000000</td>\n","      <td>2.000000</td>\n","      <td>1008.000000</td>\n","      <td>1.790000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>72.000000</td>\n","      <td>2.000000</td>\n","      <td>14.000000</td>\n","      <td>1016.000000</td>\n","      <td>5.370000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>137.000000</td>\n","      <td>15.000000</td>\n","      <td>23.000000</td>\n","      <td>1025.000000</td>\n","      <td>21.910000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>994.000000</td>\n","      <td>28.000000</td>\n","      <td>42.000000</td>\n","      <td>1046.000000</td>\n","      <td>585.600000</td>\n","      <td>27.000000</td>\n","      <td>36.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9eccc2d3-d19f-41c2-80d1-a3a77e616135')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9eccc2d3-d19f-41c2-80d1-a3a77e616135 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9eccc2d3-d19f-41c2-80d1-a3a77e616135');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-78179676-e038-423e-b825-308cc0c23236\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-78179676-e038-423e-b825-308cc0c23236')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const charts = await google.colab.kernel.invokeFunction(\n","          'suggestCharts', [key], {});\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-78179676-e038-423e-b825-308cc0c23236 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}],"source":["df = pd.read_csv('https://raw.githubusercontent.com/jbrownlee/Datasets/master/pollution.csv', index_col=0)\n","\n","df.head()\n","df.index.name = 'date'\n","df.index = pd.to_datetime(df[['year', 'month', 'day', 'hour']])\n","df.drop(['year', 'month', 'day', 'hour'], axis=1, inplace=True)\n","df = df[24:]\n","df.describe()\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RKBjXnIomg4O"},"outputs":[],"source":["df.drop(['cbwd'],axis=1, inplace=True)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":467,"status":"ok","timestamp":1690366967888,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"},"user_tz":-120},"id":"QycPnHOsBWAs","outputId":"ded69b2e-1475-462d-cba1-02f8f26acfcf"},"outputs":[{"output_type":"stream","name":"stdout","text":["43800\n","43800\n"]}],"source":["\n","d = df['pm2.5']\n","s_fwd = d.interpolate(method=\"polynomial\", order=3, limit_direction='forward')\n","s_bkd = d.interpolate(method=\"polynomial\", order=3, limit_direction='backward')\n","print(s_fwd.count())\n","print(s_bkd.count())\n","type(s_bkd)\n","tmp_df = pd.DataFrame()\n","tmp_df['fwd'] = s_fwd\n","tmp_df['bkd'] = s_bkd\n","tmp_df['mean'] = tmp_df.mean(axis=1)\n","tmp_df['mean'][tmp_df['mean'] < 0] = 0\n","\n","df['pm2.5'] = tmp_df['mean']\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7UrDBKI6kU4a"},"outputs":[],"source":["def preprocess(data):\n","  df2 = data.copy()\n","  num_lags = 2 # number of lags and window lenghts for mean aggregation\n","  delay = 1 # predict target one step ahead\n","  for column in df2:\n","    print(column)\n","    for lag in range(1,num_lags+1):\n","        df2[column + '_lag' + str(lag)] = df2[column].shift(lag*-1-(delay-1))\n","        if column != 'wnd_dir':\n","            df2[column + '_avg_window_length' + str(lag+1)] = df2[column].shift(-1-(delay-1)).rolling(window=lag+1,center=False).mean().shift(1-(lag+1))\n","\n","    df2.dropna(inplace=True)\n","\n","  mask = (df2.columns.str.contains('pm2.5') | df2.columns.str.contains('lag') | df2.columns.str.contains('window'))\n","  df_processed = df2[df2.columns[mask]]\n","  return df_processed\n","\n","# the columns in the processed dataframe\n","process = False\n","if process == True:\n","  df_processed = preprocess(df)\n","else:\n","  df_processed = df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"SQeI7HLfVEGn"},"outputs":[],"source":["df_processed['ds'] = df_processed.index"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0YlqD9FWUzok"},"outputs":[],"source":["df_processed.rename(columns = {'pm2.5':'y'}, inplace = True)\n","df_processed.head()\n","df_processed['ds']= pd.to_datetime(df_processed['ds'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HlcWPTz-BsUG"},"outputs":[],"source":["df_train = df_processed[:int(df_processed.shape[0] * 0.8)]\n","df_test = df_processed[int(df_processed.shape[0] * 0.8):]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1690366967890,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"},"user_tz":-120},"id":"6_l40frQU-zQ","outputId":"c6a734ea-95ef-4ee1-d6d8-49e33d181cdc"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         y  DEWP  TEMP    PRES     Iws  Is  Ir  \\\n","2010-01-02 00:00:00  129.0   -16  -4.0  1020.0    1.79   0   0   \n","2010-01-02 01:00:00  148.0   -15  -4.0  1020.0    2.68   0   0   \n","2010-01-02 02:00:00  159.0   -11  -5.0  1021.0    3.57   0   0   \n","2010-01-02 03:00:00  181.0    -7  -5.0  1022.0    5.36   1   0   \n","2010-01-02 04:00:00  138.0    -7  -5.0  1022.0    6.25   2   0   \n","...                    ...   ...   ...     ...     ...  ..  ..   \n","2014-12-31 19:00:00    8.0   -23  -2.0  1034.0  231.97   0   0   \n","2014-12-31 20:00:00   10.0   -22  -3.0  1034.0  237.78   0   0   \n","2014-12-31 21:00:00   10.0   -22  -3.0  1034.0  242.70   0   0   \n","2014-12-31 22:00:00    8.0   -22  -4.0  1034.0  246.72   0   0   \n","2014-12-31 23:00:00   12.0   -21  -3.0  1034.0  249.85   0   0   \n","\n","                                     ds  \n","2010-01-02 00:00:00 2010-01-02 00:00:00  \n","2010-01-02 01:00:00 2010-01-02 01:00:00  \n","2010-01-02 02:00:00 2010-01-02 02:00:00  \n","2010-01-02 03:00:00 2010-01-02 03:00:00  \n","2010-01-02 04:00:00 2010-01-02 04:00:00  \n","...                                 ...  \n","2014-12-31 19:00:00 2014-12-31 19:00:00  \n","2014-12-31 20:00:00 2014-12-31 20:00:00  \n","2014-12-31 21:00:00 2014-12-31 21:00:00  \n","2014-12-31 22:00:00 2014-12-31 22:00:00  \n","2014-12-31 23:00:00 2014-12-31 23:00:00  \n","\n","[43800 rows x 8 columns]"],"text/html":["\n","\n","  <div id=\"df-6cc9d1fa-2eec-4090-8957-2bfdb808f54a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>y</th>\n","      <th>DEWP</th>\n","      <th>TEMP</th>\n","      <th>PRES</th>\n","      <th>Iws</th>\n","      <th>Is</th>\n","      <th>Ir</th>\n","      <th>ds</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-01-02 00:00:00</th>\n","      <td>129.0</td>\n","      <td>-16</td>\n","      <td>-4.0</td>\n","      <td>1020.0</td>\n","      <td>1.79</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2010-01-02 00:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-02 01:00:00</th>\n","      <td>148.0</td>\n","      <td>-15</td>\n","      <td>-4.0</td>\n","      <td>1020.0</td>\n","      <td>2.68</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2010-01-02 01:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-02 02:00:00</th>\n","      <td>159.0</td>\n","      <td>-11</td>\n","      <td>-5.0</td>\n","      <td>1021.0</td>\n","      <td>3.57</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2010-01-02 02:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-02 03:00:00</th>\n","      <td>181.0</td>\n","      <td>-7</td>\n","      <td>-5.0</td>\n","      <td>1022.0</td>\n","      <td>5.36</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2010-01-02 03:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2010-01-02 04:00:00</th>\n","      <td>138.0</td>\n","      <td>-7</td>\n","      <td>-5.0</td>\n","      <td>1022.0</td>\n","      <td>6.25</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2010-01-02 04:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 19:00:00</th>\n","      <td>8.0</td>\n","      <td>-23</td>\n","      <td>-2.0</td>\n","      <td>1034.0</td>\n","      <td>231.97</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-12-31 19:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 20:00:00</th>\n","      <td>10.0</td>\n","      <td>-22</td>\n","      <td>-3.0</td>\n","      <td>1034.0</td>\n","      <td>237.78</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-12-31 20:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 21:00:00</th>\n","      <td>10.0</td>\n","      <td>-22</td>\n","      <td>-3.0</td>\n","      <td>1034.0</td>\n","      <td>242.70</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-12-31 21:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 22:00:00</th>\n","      <td>8.0</td>\n","      <td>-22</td>\n","      <td>-4.0</td>\n","      <td>1034.0</td>\n","      <td>246.72</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-12-31 22:00:00</td>\n","    </tr>\n","    <tr>\n","      <th>2014-12-31 23:00:00</th>\n","      <td>12.0</td>\n","      <td>-21</td>\n","      <td>-3.0</td>\n","      <td>1034.0</td>\n","      <td>249.85</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2014-12-31 23:00:00</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>43800 rows × 8 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6cc9d1fa-2eec-4090-8957-2bfdb808f54a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-1582dda7-07d4-42bb-9668-eeb2c7dc5f34\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1582dda7-07d4-42bb-9668-eeb2c7dc5f34')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-1582dda7-07d4-42bb-9668-eeb2c7dc5f34 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6cc9d1fa-2eec-4090-8957-2bfdb808f54a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6cc9d1fa-2eec-4090-8957-2bfdb808f54a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}],"source":["df_processed"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":15,"status":"ok","timestamp":1690366967890,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"},"user_tz":-120},"id":"BqIWxVqUXLV-","outputId":"f24f1d91-ae72-47d1-a1dd-a9af8e27b3f6"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 8760 entries, 2014-01-01 00:00:00 to 2014-12-31 23:00:00\n","Data columns (total 8 columns):\n"," #   Column  Non-Null Count  Dtype         \n","---  ------  --------------  -----         \n"," 0   y       8760 non-null   float64       \n"," 1   DEWP    8760 non-null   int64         \n"," 2   TEMP    8760 non-null   float64       \n"," 3   PRES    8760 non-null   float64       \n"," 4   Iws     8760 non-null   float64       \n"," 5   Is      8760 non-null   int64         \n"," 6   Ir      8760 non-null   int64         \n"," 7   ds      8760 non-null   datetime64[ns]\n","dtypes: datetime64[ns](1), float64(4), int64(3)\n","memory usage: 615.9 KB\n"]}],"source":["df_test.info()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":13,"status":"ok","timestamp":1690366967890,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"},"user_tz":-120},"id":"FwbXh0E7W1zC","outputId":"2a08dd30-36d9-42fb-f2d5-1d26c8a2250b"},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","DatetimeIndex: 43800 entries, 2010-01-02 00:00:00 to 2014-12-31 23:00:00\n","Data columns (total 8 columns):\n"," #   Column  Non-Null Count  Dtype         \n","---  ------  --------------  -----         \n"," 0   y       43800 non-null  float64       \n"," 1   DEWP    43800 non-null  int64         \n"," 2   TEMP    43800 non-null  float64       \n"," 3   PRES    43800 non-null  float64       \n"," 4   Iws     43800 non-null  float64       \n"," 5   Is      43800 non-null  int64         \n"," 6   Ir      43800 non-null  int64         \n"," 7   ds      43800 non-null  datetime64[ns]\n","dtypes: datetime64[ns](1), float64(4), int64(3)\n","memory usage: 3.0 MB\n"]}],"source":["df_processed.info()"]},{"cell_type":"code","source":["df_test.shape[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nA87Yls-A-A_","executionInfo":{"status":"ok","timestamp":1690366967890,"user_tz":-120,"elapsed":12,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"518da72f-2653-4c49-9581-4892d1a20530"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["8760"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"F7cf6yI9b99L"},"outputs":[],"source":["import time\n","start_time = time.time()"]},{"cell_type":"code","source":["from autots.models.model_list import model_lists\n","\n","model_lists['multivariate']"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dTOwTol51mUv","executionInfo":{"status":"ok","timestamp":1690366968306,"user_tz":-120,"elapsed":5,"user":{"displayName":"Swarnendu Sengupta","userId":"05822155176247306527"}},"outputId":"899c95e7-0ddf-49be-816f-32aea1c23034"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['VECM',\n"," 'DynamicFactor',\n"," 'GluonTS',\n"," 'RollingRegression',\n"," 'WindowRegression',\n"," 'VAR',\n"," 'MultivariateMotif',\n"," 'NVAR',\n"," 'MultivariateRegression',\n"," 'SectionalMotif',\n"," 'DynamicFactorMQ',\n"," 'PytorchForecasting',\n"," 'RRVAR',\n"," 'MAR',\n"," 'TMF',\n"," 'LATC',\n"," 'Cassandra']"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TvzHk_VHV6IP","outputId":"d6f5bf01-1f1f-4e24-f663-63c76ae405c3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Using 1 cpus for n_jobs.\n","Inferred frequency is: H\n","Model Number: 1 with model GluonTS in generation 0 of 1\n"]},{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/numpy/core/_methods.py:246: RuntimeWarning: overflow encountered in reduce\n","  ret = umr_sum(x, axis, dtype, out, keepdims=keepdims, where=where)\n"]},{"output_type":"stream","name":"stdout","text":["Template Eval Error: ImportError('GluonTS installation is incompatible with AutoTS. The numpy version is sometimes the issue, try 1.23.1 {as of 06-2023}') in model 1 in generation 0: GluonTS\n","Model Number: 2 with model GluonTS in generation 0 of 1\n","Template Eval Error: ImportError('GluonTS installation is incompatible with AutoTS. The numpy version is sometimes the issue, try 1.23.1 {as of 06-2023}') in model 2 in generation 0: GluonTS\n","Model Number: 3 with model GluonTS in generation 0 of 1\n","Template Eval Error: ImportError('GluonTS installation is incompatible with AutoTS. The numpy version is sometimes the issue, try 1.23.1 {as of 06-2023}') in model 3 in generation 0: GluonTS\n","Model Number: 4 with model GluonTS in generation 0 of 1\n","Template Eval Error: ImportError('GluonTS installation is incompatible with AutoTS. The numpy version is sometimes the issue, try 1.23.1 {as of 06-2023}') in model 4 in generation 0: GluonTS\n","Model Number: 5 with model GluonTS in generation 0 of 1\n","Template Eval Error: ImportError('GluonTS installation is incompatible with AutoTS. The numpy version is sometimes the issue, try 1.23.1 {as of 06-2023}') in model 5 in generation 0: GluonTS\n","Model Number: 6 with model VAR in generation 0 of 1\n","Model Number: 7 with model VAR in generation 0 of 1\n","Model Number: 8 with model VECM in generation 0 of 1\n","Template Eval Error: LinAlgError('Singular matrix') in model 8 in generation 0: VECM\n","Model Number: 9 with model VECM in generation 0 of 1\n"]}],"source":["model = AutoTS(\n","    forecast_length=10,\n","    prediction_interval=0.95,\n","    model_list = 'multivariate',# or ['ARIMA','ETS']\n","    max_generations=1,\n","    num_validations=1,\n","    no_negatives=True,\n","    n_jobs='auto')\n","\n","model.fit(df_train)\n","\n"]},{"cell_type":"code","source":["prediction = model.predict(forecast_length=df_test.shape[0])"],"metadata":{"id":"OuzYAVUPBjsx"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uITUwQy7cNqz"},"outputs":[],"source":["end = time.time()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3W7a90Z7cQOX"},"outputs":[],"source":["end-start_time"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BhdSc2rkmy2l"},"outputs":[],"source":["df_test.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0zsUd_NGZKD5"},"outputs":[],"source":["predictions = model.predict(\n","            testdata = df_processed,\n","            model = 'best'\n","        )"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"wMy-sJrUY_Io"},"outputs":[],"source":["predictions"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"6KXmroJqaPsM"},"outputs":[],"source":["y_act = df_processed['y']\n","y_act.reset_index(inplace = True, drop=True)\n","y_act"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kkzHMHYiZcoa"},"outputs":[],"source":["y_pred = predictions['yhat']\n","y_pred.reset_index(inplace = True, drop=True)\n","y_pred"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_95KDvR-a09W"},"outputs":[],"source":["from sklearn.metrics import mean_squared_error\n","import math\n","rmse = round(math.sqrt(mean_squared_error(predictions['yhat'], y_act)),2)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"OQruXipXaEMr"},"outputs":[],"source":["plt.plot(y_act, label = 'Actual')\n","plt.plot(predictions['yhat'], label = \"Predicted\")\n","plt.legend()\n","\n","plt.title(\"AutoTS output RMSE - \"+ str(rmse) )"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"70ycDCaaboIL"},"outputs":[],"source":[]},{"cell_type":"code","source":[],"metadata":{"id":"wbLbucAIXpru"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Q7MnTkoKXqV-"},"execution_count":null,"outputs":[]}],"metadata":{"colab":{"provenance":[{"file_id":"1DQdJ9Y7tIoNnJsBkEkLJwYy_dkny8_Cv","timestamp":1686655920704},{"file_id":"1Ic6nT7Dv6RMZ-2UPojY_PQL6CebYwfZu","timestamp":1686651970638},{"file_id":"1ppviZvc3QDt8GAShNzFK7hbjv5P_Skoy","timestamp":1686304197021}],"gpuType":"T4","mount_file_id":"1Ic6nT7Dv6RMZ-2UPojY_PQL6CebYwfZu","authorship_tag":"ABX9TyMZK9bdJX3anM4mbWARWPtE"},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}